title
SG - Net : Syntax - Guided Machine Reading Comprehension
abstract
For machine reading comprehension , the capacity of effectively modeling the linguistic knowledge from the detailriddled and lengthy passages and getting ride of the noises is essential to improve its performance .
Traditional attentive models attend to all words without explicit constraint , which results in inaccurate concentration on some dispensable words .
In this work , we propose using syntax to guide the text modeling by incorporating explicit syntactic constraints into attention mechanism for better linguistically motivated word representations .
In detail , for self - attention network ( SAN ) sponsored Transformer - based encoder , we introduce syntactic dependency of interest ( SDOI ) design into the SAN to form an SDOI - SAN with syntax - guided selfattention .
Syntax - guided network ( SG - Net ) is then composed of this extra SDOI - SAN and the SAN from the original Transformer encoder through a dual contextual architecture for better linguistics inspired representation .
To verify its effectiveness , the proposed SG - Net is applied to typical pre-trained language model BERT which is right based on a Transformer encoder .
Extensive experiments on popular benchmarks including SQuAD 2.0 and RACE show that the proposed SG - Net design helps achieve substantial performance improvement over strong baselines .
Introduction
Recently , much progress has been made in general - purpose language modeling that can be used across a wide range of tasks .
Understanding the meaning of a sentence is a prerequisite to solve many natural language understanding ( NLU ) problems , such as machine reading comprehension ( MRC ) based question answering .
Obviously , it requires a good representation of the meaning of a sentence .
A person reads most words superficially and pays more attention to the key ones during reading and understanding sentences ( Wang , .
Although a variety of attentive models have been proposed to imitate human learning , most of them , especially global attention methods equally tackle each word and attend to all words in a sentence without explicit pruning and prior focus , which would result in inaccurate concentration on some dispensable words .
We observe that the accuracy of MRC models decreases when answering long questions ( shown in Section 5.1 ) .
Generally , if the text is particularly lengthy and detailedriddled , it would be quite difficult for deep learning model to understand as it suffers from noise and pays vague attention on the text components , let alone accurately answering questions .
In contrast , existing studies have verified that human reads sentences efficiently by taking a sequence of fixation and saccades after a quick first glance .
Besides , for passage involved reading comprehension , a input sequence always consists of multiple sentences .
Nearly all of the current attentive methods and language models regard the input sequence as a whole , e.g. , a passage , with no consideration of the inner linguistic structure inside each sentence .
This would result in process bias caused by much noise and lack of associated spans for each concerned word .
All these factors motivate us to seek for an informative method that can selectively pick out important words by only considering the related subset of words of syntactic importance inside each input sentence explicitly .
With a guidance of syntactic structure clues , the syntax - guided method could give more accurate attentive signals and reduce the impact of the noise brought about by lengthy sentences .
So far , we have two types of broadly adopted contextualized encoders for building sentence - level representation , .
The latter has shown its superiority which is empowered by a self - attention network ( SAN ) design .
In this paper , we extend the self - attention mechanism with syntax - guided constraint , to capture syntax related parts with each concerned word .
Specifically , we adopt pre-trained dependency syntactic parse tree structure to produce the related nodes for each word in a sentence , namely syntactic dependency of interest ( SDOI ) , by regarding each word as a child node and the SDOI consists all its ancestor nodes and itself in the dependency parsing tree .
An example is shown in .
To effectively accommodate such SDOI information , we propose a novel syntax - guided network ( SG - Net ) , which fuses the original SAN and SDOI - SAN , to provide more linguistically inspired representation for challenging reading comprehension tasks 1 .
To our best knowledge , we are the first to integrate syntactic relationship as attentive guidance for enhancing state - of - the - art SAN in Transformer encoder .
The proposed SG - Net design is applied to pre-trained ) and evaluated on challenging MRC tasks , which shows its effectiveness by boosting the strong baseline substantially .
Related Work
Machine Reading Comprehension
In the last decade , the MRC tasks have evolved from the early cloze - style test to span - based answer extraction from passage ) .
The latest evaluation shows that BERT is powerful and convenient for downstream tasks .
Following this line , we extract context - sensitive syntactic features and take pre-trained BERT as our backbone encoder to verify the effectiveness of our proposed SG - Net .
Syntactic Structures
Recently , dependency syntactic parsing have been further developed with neural network and attained new state - of the - art results .
Benefiting from the highly accurate parser , neural network models could enjoy even higher accuracy gains by leveraging syntactic information rather than ignoring it .
Syntactic dependency parse tree provides a form that is capable of indicating the existence and type of linguistic dependency relation among words , which has been shown generally beneficial in various natural language understanding tasks ( Bowman et al. 2016 ) .
To effectively exploit syntactic clue , most of previous works ) absorb parse tree information by transforming dependency labels into vectors and simply concatenate the label embedding with word representation .
However , such simplified and straightforward processing would result in higher dimension of joint word and label embeddings and is too coarse to capture contextual interactions between the associated labels and the mutual connections between labels and words .
This inspires us to seek for an attentive way to enrich the contextual representation from the syntactic source .
A related work is from Strubell et al. , which proposed to incorporate syntax with multi-task learning for semantic role labeling .
However , their syntax is incorporated by training one extra attention head to attend to syntactic ancestors for each token while we use all the existing heads rather than add an extra one .
Besides , this work is based on the remarkable representation capacity of recent language models such as BERT , which have been suggested to be endowed with some syntax to an extent .
Therefore , we are motivated to apply syntactic constraints through syntax guided method to prune the self - attention instead of purely adding dependency features .
In this work , we form a general approach to benefit from syntax - guided representations , which is the first attempt for the SAN architecture improvement in Transformer encoder to our best knowledge .
The idea of updating the representation of a word with information from its neighbors in the dependency tree which benefits from explicit syntactic constraints , is well linguistically motivated .
Syntax - Guided Network
Our syntax - guided representation is obtained by two steps .
Firstly , we pass the encoded representation from the Transformer encoder to a syntax - guided self - attention layer .
Secondly , the corresponding output is aggregated with the original encoder output to form a syntax - enhanced representation .
It is designed to incorporate the syntactic tree structure information inside a multi-head attention mechanism to indicate the token relationships of each sentence which will be demonstrated as follows .
Syntax - Guided self - attention
Layer
In this work , we first pre-train a syntactic dependency parser to annotate the dependency structures for every sentence which are then fed to SG - Net as guidance of token - aware attention .
Details of the pre-training process of the parser are reported in Section 4.2 .
The increase reflects lower credit losses
Root
The increase reflects lower credit losses
To use the relationship between headword and dependent words provided by the syntactic dependency tree of sentence , we restrain the scope of attention only between word and all of its ancestor head words 3 .
In other word , we would like to have each word only attend to words of syntactic importance in a sentence , the ancestor head words in the view of the child word .
As shown in , instead of taking attention with each word in whole passage , the word credit only makes attention with its ancestor head words reflects and losses and itself in this sentence , which means that the SDOI of credit contains reflects , losses along with itself
4 .
Specifically , given input token sequence S = {s 1 , s 2 , ... , s n } where n denotes the sequence length , we first use syntactic parser to generate a dependency tree .
Then , we derive the ancestor node set P i for each word s i according to the dependency tree .
Finally , we learn a sequence of SDOI mask M , organized as n * n matrix , and elements in each row denote the dependency mask of all words to the row -index word .
Obviously , if M [i , j ] = 1 , it means that token s i is the ancestor node of token s j .
As the example shown in , the ancestors of credit ( i = 4 ) are reflects ( j = 2 ) , losses ( j = 5 ) along with itself ( j = 4 ) ; therefore , M [ 4 , ( 2 , 4 , 5 ) ] = 1 and M [ 4 , ( 0 , 1 , 3 ) ] = 0 .
We then project the last layer output H from the vanilla Transformer into the distinct key , value , and query representations of dimensions L d k , L d q , and L d v , respectively , denoted K i , Q i and V i for each head i .
Then we perform a dot product to score key - query pairs with the dependency of interest mask to obtain attention weights of dimension L L , denoted A i :
We then multiply attention weight A i by V i to obtain the syntax - guided token representations :
Then W i for all heads are concatenated and passed through a feed - forward layer followed by GeLU activations ( Hendrycks and Gimpel 2016 ) .
After passing through another feed - forward layer , we apply a layer normalization to the sum of output and initial representation to obtain the final representation , denoted as H = {h 1 , h 2 , ... , h n }.
Dual Context Aggregation
Considering that we have two representations now , one is H = {h 1 , h 2 , ... , h n } from the Transformer encoder , the other is H = {h 1 , h 2 , ... , h n } from syntax - guided layer from the above part .
Formally , the final model output of our SG - NetH = {h 1 , h 2 , ... ,h n } is computed by :
h
Task - specific
Adaptation
We focus on two types of reading comprehension tasks , i.e. , span - based and multi -choice style which can be described as a tuple < P , Q , A > or < P , Q , C , A > respectively , where P is a passage ( context ) and Q is a query over the contents of P , in which a span or choice C is the right answer A .
For the span - based one , we implemented our model on SQuAD 2.0 task that contains unanswerable questions .
Our system is supposed to not only predict the start and end position in the passage P and extract span as answer A but also return a null string when the question is unanswerable .
For the multichoice style , the model is implemented on RACE dataset which is requested to choose the right answer from a set of candidate ones according to given passage and question .
Here , we formulate our model for both of the two tasks and feed the output from the syntax - guided network to task layers according to specific task .
Given the passage P , the question Q , and the choice C specially for RACE , we Choice :
organize the input X for the encoder as the following two sequences .
where || denotes concatenation .
In this work , pre-trained BERT is adopted as our detailed implementation of the Transformer encoder .
Thus the sequence is fed to BERT encoder mentioned above to obtain the contextualized representation H which is then passed to our proposed syntax - guided self - attention layer and aggregation layer to obtain the final syntax - enhanced representation H .
To keep simplicity , the downstream taskspecific layer basically follows the implementation of BERT .
We outline below to keep the integrity of our model architecture .
For span - based task , we feed H to a linear layer and obtain the probability distributions over the start and end positions through a softmax .
For multi - choice task , we feed it into the classifier to predict the choice label for the multichoice model .
The training objective of our SQuAD model is defined as cross entropy loss for the start and end predictions , L has = y slog s + ye loge .
For prediction , given output start and end probabilities sand e , we calculate the has - answer score score has and the noanswer score score na :
score has = max (s k + e l ) , 0 ? k ? l ?
n , score na = s 0 + e 0 .
We obtain a difference score between has - answer score and the no -answer score as final score .
A threshold ?
is set to determine whether the question is answerable , which is heuristically computed in linear time with dynamic programming according to the development set .
The model predicts the answer span that gives the has - answer score if the final score is above the threshold , and null string otherwise. , the pooled representation explicitly includes classification information during the pre-training stage of BERT .
We expect the pooled to be over all representation of the input .
Thus , the first token representationh 0 in H is picked out and is passed to a feedforward layer to give the prediction p.
For each instance with n choice candidates , we update model parameters according to cross -entropy loss during training and choose the one with highest probability as the prediction when testing .
The training objectives of our RACE model is defined as , L ( ? ) = ?
1
Ni y i log pi , where pi denotes the prediction , y i is the target , and i denotes the data index .
RACE
As discussed in
Experiments
Dataset and Setup
Our experiments and analysis are carried on two data sets , involving span - based and multi - choice MRC and we use the fine - tuned cased BERT ( whole word masking ) as the baseline .
Span - based MRC
As a widely used MRC benchmark dataset , SQuAD 2.0 combines the 100,000 questions in SQuAD 1.1 with over 50,000 new , unanswerable questions thatare written adversarially by crowdworkers to look similar to answerable ones .
For the SQuAD 2.0 challenge , systems must not only answer questions when possible , but also abstain from answering when no answer is supported by the paragraph .
Two official metrics are selected to evaluate the model performance : Exact Match ( EM ) and a softer metric F1 score , which measure the weighted average of the precision and recall rate at a character level .
Multi-choice
MRC
Our multi - choice MRC is evaluated on Large - scale ReAding Comprehension Dataset From Examinations ( RACE ) dataset , which consists of two subsets : RACE - M and RACE - H corresponding to middle school and high school difficulty levels .
RACE contains 27,933 passages and 97,687 questions in total , which is recognized as one of the largest and most difficult datasets in multi-choice MRC .
The official evaluation metric is accuracy .
Implementation
For the syntactic parser , we adopt the dependency parser from by joint learning of constituent parsing ( Kitaev and Klein 2018 ) using BERT as sole input which achieves very high accuracy : 97.00 % UAS and 95.43 % LAS on the English dataset Penn Treebank ( PTB ) test set 5 .
Note this work is done in data preprocessing and our parser is not updated with the following MRC models .
For MRC model implementation ,
We adopt the Whole Word Masking BERT as the baseline 6 .
The initial learning rate is set in { 8e -6 , 1 e - 5 , 2 e - 5 , 3 e - 5 } with warm - up rate of 0.1 and L2 weight decay of 0.01 .
The batch size is selected in { 16 , 20 , 32 } .
The maximum number of epochs is set to 3 or 10 depending on tasks .
The weight ?
in the dual context aggregation is 0.5 .
All the texts are tokenized using wordpieces , and the maximum input length is set to 384 for both of SQuAD and RACE .
The configuration for multihead self - attention is the same as that for BERT .
Main Results
To focus on the evaluation of syntactic advance and keep simplicity , we only compare with single models instead of ensemble ones .
SQuAD 2.0 shows the result on SQ uAD 2.0 .
Various state of the art models from the official leaderboard are also listed for reference .
We can see that the performance of BERT is very strong .
However , our model is more powerful , boosting the BERT baseline essentially .
It also outperforms all the published works and achieves the 2nd place on the leaderboard when submitting SG - NET .
We also find that adding an extra answer verifier module could yield better result , which is pre-trained only to determine whether question is answerable or not with the same training data as SG - Net .
The logits of the verifier are weighted with score na to give the final predictions .
RACE
Discussions
Effect of Answering Long Questions
We sort the questions from SQu AD dev set according to the length and group them into 20 subsets split by equal range of question length and equal amount of questions
8 .
Then we calculate the exact match accuracy of the baseline and SG - Net per group , as shown in .
We observe that the performance of the baseline drops heavily when encountered with long questions , especially for those longer than 20 words while our proposed SG - Net works robustly , even showing positive correlation between accuracy and length .
Since the question length is at variance , we depict the two aspects to show the discovery comprehensively .
This shows that with syntax - enhanced representation , our model is better at dealing with lengthy questions compared with baseline .
Visualization
To have an insight that how syntax - guided attention works , we draw attention distributions of the vanilla attention of the last layer of BERT and our proposed syntaxguided self - attention 9 , as shown in .
With the guidance of syntax , the keywords name , legislation and 1850 in the question are highlighted , and ( the ) Missouri , and Compromise in the passage are also paid great attention , which is exactly the right answer .
The visualization verifies that benefiting from syntax - guided attention layer , our model is effective at selecting the vital parts , guiding the downstream layer to collect more relevant pieces to make predictions .
Dual Context Mechanism Evaluation
In SG - Net , we integrate the representations from syntaxguided attention layer and the vanilla self - attention layer in dual context layer .
To unveil the contribution of each potential component , we conduct comparisons on the baseline with :
1 .
Vanilla attention only that adds an extra vanilla BERT attention layer after the BERT output .
2 . Syntax - guided attention only that adds an extra syntaxguided layer after the BERT output .
3 . Dual contextual attention that is finally adopted in SG - Net as described in Section 3.1 . :
Ablation study on potential components and aggregation methods on SQuAD 2.0 dev set .
attention gives no advance , indicating that introducing more parameters would not promote the strong baseline .
It is reasonable that syntax - guided attention only is also trivial since it only considers the syntax related parts when calculating the attention , which is complementary to traditional attention mechanism with noisy but more diverse information and finally motivates the design of dual contextual layer .
Actually , there are other operations for merging representations in dual context layer besides the weighted dual aggregation , such as concatenation and Bi-attention , which are also involved in our comparison , and our experiments show that using dual contextual attention produces the best result .
Conclusion
This paper presents a novel syntax - guided framework for enhancing strong Transformer - based encoders .
We explore to adopt syntax to guide the text modeling by incorporating syntactic constraints into attention mechanism for better linguistically motivated word representations .
Thus , we adopt a dual contextual architecture called syntax - guided network ( SG - Net ) which fuses both the original SAN representations and syntax - guided SAN representations .
Taking pre-trained BERT as our Transformer encoder implementation , experiments on two major machine reading comprehension benchmarks involving span - based answer extraction ( SQuAD 2.0 ) and multi-choice inference ( RACE ) show that our model can yield new state - of - the - art or comparative results in both extremely challenging tasks .
This work empirically discloses the effectiveness of syntactic structural information for text modeling .
The proposed attention mechanism also verifies the practicability of using linguistic information to guide attention learning and can be easily adapted with other tree - structured annotations .
