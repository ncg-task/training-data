title
Soft Layer-Specific Multi-Task Summarization with Entailment and Question Generation
abstract
An accurate abstractive summary of a document should contain all its salient information and should be logically entailed by the input document. We improve these important aspects of abstractive summarization via multi-task learning with the auxiliary tasks of question generation and entailment generation, where the former teaches the summarization model how to look for salient questioning-worthy details, and the latter teaches the model how to rewrite a summary which is a directed-logical subset of the input document. We also propose novel multitask architectures with high-level (semantic) layer-specific sharing across multiple encoder and decoder layers of the three tasks, as well as soft-sharing mechanisms (and show performance ablations and analysis examples of each contribution). Overall, we achieve statistically significant improvements over the state-ofthe-art on both the CNN/DailyMail and Gigaword datasets, as well as on the DUC-2002 transfer setup. We also present several quantitative and qualitative analysis studies of our model's learned saliency and entailment skills.
Introduction
Abstractive summarization is the challenging NLG task of compressing and rewriting a document into a short, relevant, salient, and coherent summary. It has numerous applications such as summarizing storylines, event understanding, etc. As compared to extractive or compressive summarization, abstractive summaries are based on rewriting as opposed to selecting. Recent end-to-end, neural sequence-tosequence models and larger datasets have allowed substantial progress on the abstractive task, with ideas ranging from copy-pointer mechanism and redundancy coverage, to metric reward based reinforcement learning.
Despite these strong recent advancements, there is still a lot of scope for improving the summary quality generated by these models. A good rewritten summary is one that contains all the salient information from the document, is logically followed (entailed) by it, and avoids redundant information. The redundancy aspect was addressed by coverage models, but we still need to teach these models about how to better detect salient information from the input document, as well as about better logicallydirected natural language inference skills.
In this work, we improve abstractive text summarization via soft, high-level (semantic) layerspecific multi-task learning with two relevant auxiliary tasks. The first is that of document-toquestion generation, which teaches the summarization model about what are the right questions to ask, which in turn is directly related to what the salient information in the input document is. The second auxiliary task is a premise-to-entailment generation task to teach it how to rewrite a summary which is a directed-logical subset of (i.e., logically follows from) the input document, and contains no contradictory or unrelated information. For the question generation task, we use the SQuAD dataset, where we learn to generate a question given a sentence containing the answer, similar to the recent work by. Our entailment generation task is based on the recent SNLI classification dataset and task, converted to a generation task .
Further, we also present novel multi-task learning architectures based on multi-layered encoder and decoder models, where we empirically show that it is substantially better to share the higherlevel semantic layers between the three aforementioned tasks, while keeping the lower-level (lexico-syntactic) layers unshared. We also explore different ways to optimize the shared parameters and show that 'soft' parameter sharing achieves higher performance than hard sharing.
Empirically, our soft, layer-specific sharing model with the question and entailment generation auxiliary tasks achieves statistically significant improvements over the state-of-the-art on both the CNN/DailyMail and Gigaword datasets. It also performs significantly better on the DUC-2002 transfer setup, demonstrating its strong generalizability as well as the importance of auxiliary knowledge in low-resource scenarios. We also report improvements on our auxiliary question and entailment generation tasks over their respective previous state-of-the-art. Moreover, we significantly decrease the training time of the multitask models by initializing the individual tasks from their pretrained baseline models. Finally, we present human evaluation studies as well as detailed quantitative and qualitative analysis studies of the improved saliency detection and logical inference skills learned by our multi-task model.

Related Work
Automatic text summarization has been progressively improving over the time, initially more focused on extractive and compressive models, and moving more towards compressive and abstractive summarization based on graphs and concept maps and discourse trees, syntactic parse trees, and Abstract Meaning Representations (AMR). Recent work has also adopted machine translation inspired neural seq2seq models for abstractive summarization with advances in hierarchical, distractive, saliency, and graphattention modeling. and incorporated recent advances from reinforcement learning. Also, further improved results via pointercopy mechanism and addressed the redundancy with coverage mechanism.
Multi-task learning (MTL) is a useful paradigm to improve the generalization performance of a task with related tasks while sharing some common parameters/representations. Several recent works have adopted MTL in neural models. Moreover, some of the above works have investigated the use of shared vs unshared sets of parameters. On the other hand, we investigate the importance of soft parameter sharing and highlevel versus low-level layer-specific sharing.
Our previous workshop paper  presented some preliminary results for multi-task learning of textual summarization with entailment generation. This current paper has several major differences: (1) We present question generation as an additional effective auxiliary task to enhance the important complementary aspect of saliency detection; (2) Our new high-level layer-specific sharing approach is significantly better than alternative layer-sharing approaches (including the decoder-only sharing by ); (3) Our new soft sharing parameter approach gives stat. significant improvements over hard sharing; (4) We propose a useful idea of starting multi-task models from their pretrained baselines, which significantly speeds up our experiment cycle 1 ; (5) For evaluation, we show diverse improvements of our soft, layer-specific MTL model (over state-of-the-art pointer+coverage baselines) on the CNN/DailyMail, Gigaword, as well as DUC datasets; we also report human evaluation plus analysis examples of learned saliency and entailment skills; we also report improvements on the auxiliary question and entailment generation tasks over their respective previous state-of-the-art.
In our work, we use a question generation task to improve the saliency of abstractive summarization in a multi-task setting. Using the SQuAD dataset, we learn to generate a question given the sentence containing the answer span in the comprehension (similar to). For the second auxiliary task of entailment generation, we use the generation version of the RTE classification task. Some previous work has explored the use of RTE for redundancy detection in summarization by modeling graph-based relationships between sentences to select the most non-redundant sentences, whereas our approach is based on multi-task learning.

Models
Average Entailment Probability Baseline 0.907 Multi-Task (EG) 0.912: Entailment classification results of our baseline vs. EG-multi-task model (p < 0.001).
these alternate sharing methods in all metrics with statistical significance (p < 0.05). 11

Baseline Pointer+Coverage Model
We use a sequence-attention-sequence model with a 2-layer bidirectional LSTM-RNN encoder and a 2-layer uni-directional LSTM-RNN decoder, along with style attention. Let x = {x 1 , x 2 , ..., x m } be the source document and y = {y 1 , y 2 , ..., y n } be the target summary. The output summary generation vocabulary distribution conditioned over the input source document is P v (y|x; ?) = n t=1 p v (y t |y 1:t?1 , x; ?). Let the decoder hidden state be st at time step t and let ct be the context vector which is defined as a weighted combination of encoder hidden states. We concatenate the decoder's (last) RNN layer hidden state st and context vector ct and apply a linear transformation, and then project to the vocabulary space by another linear transformation. Finally, the conditional vocabulary distribution at each time step t of the decoder is defined as:
and sfm(?) is the softmax function.
Pointer-Generator Networks Pointer mechanism  helps in directly copying the words from the source sequence during target sequence generation, which is a good fit for a task like summarization. Our pointer mechanism approach is similar to, who use a soft switch based on the generation probability pg = ?(W g ct +U g st +V g e w t?1 +b g ), where ?(?) is a sigmoid function, W g , U g , V g and b g are parameters learned during training. e w t?1 is the previous time step output word embedding. The final word distribution is P f (y) = pg ?P v (y)+(1?p g )?P c (y), where P v vocabulary distribution is as shown in Eq. 1, and copy distribution P c is based on the attention distribution over source document words.
Coverage Mechanism Following previous work, coverage helps alleviate the issue of word repetition while generating long summaries. We maintain a coverage vector ct = t?1 t=0 ? t that sums over all of the previous time steps attention distributions ? t , and this is added as input to the attention mechanism. Coverage loss is L cov (?) = ti min(? t,i ,? t,i ). Finally, the total loss is a weighted combination of cross-entropy loss and coverage loss:
where ? is a tunable hyperparameter.

Two Auxiliary Tasks
Despite the strengths of the strong model described above with attention, pointer, and coverage, a good summary should also contain maximal salient information and be a directed logical entailment of the source document. We teach these skills to the abstractive summarization model via multi-task training with two related auxiliary tasks: question generation task and entailment generation.

Question Generation
The task of question generation is to generate a question from a given input sentence, which in turn is related to the skill of being able to find the important salient information to ask questions about. First the model has to identify the important information present in the given sentence, then it has to frame (generate) a question based on this salient information, such that, given the sentence and the question, one has to be able to predict the correct answer (salient information in this case). A good summary should also be able to find and extract all the salient information in the given source document, and hence we incorporate such capabilities into our abstractive text summarization model by multi-task learning it with a question generation task, sharing some common parameters/representations (see more details in Sec. 4). For setting up the question generation task, we follow and use the SQuAD dataset to extract sentencequestion pairs. Next, we use the same sequenceto-sequence model architecture as our summarization model. Note that even though our question generation task is generating one question at a time 2 , our multi-task framework (see Sec. 4) is setup in such away that the sentence-level knowledge from this auxiliary task can help the documentlevel primary (summarization) task to generate multiple salient facts -by sharing high-level semantic layer representations. See Sec. 7 and Table 10 for a quantitative evaluation showing that the multi-task model can find multiple (and more) salient phrases in the source document. Also see Sec. 7 (and supp) for challenging qualitative examples where baseline and SotA models only recover a small subset of salient information but our multi-task model with question generation is able to detect more of the important information.
Entailment Generation The task of entailment generation is to generate a hypothesis which is entailed by (or logically follows from) the given premise as input. In summarization, the generation decoder also needs to generate a summary that is entailed by the source document, i.e., does not contain any contradictory or unrelated/extraneous information as compared to the input document. We again incorporate such inference capabilities into the summarization model via multi-task learning, sharing some common representations/parameters between our summarization and entailment generation model (more details in Sec. 4). For this task, we use the entailmentlabeled pairs from the SNLI dataset and set it up as a generation task (using the same strong model architecture as our abstractive summarization model). See Sec. 7 and for a quantitative evaluation showing that the multi-task model is better entailed by the source document and has fewer extraneous facts. Also see Sec. 7 and supplementary for qualitative examples of how our multi-task model with the entailment auxiliary task is able to generate more logically-entailed summaries than the baseline and We also tried to generate all the questions at once from the full document, but we obtained low accuracy because of this task's challenging nature and over all less training data.: Overview of our multi-task model with parallel training of three tasks: abstractive summary generation (SG), question generation (QG), and entailment generation (EG). We share the 'blue' color representations across all the three tasks, i.e., second layer of encoder, attention parameters, and first layer of decoder.
SotA models, which instead produce extraneous, unrelated words not present (in any paraphrased form) in the source document.

Multi-Task Learning
We employ multi-task learning for parallel training of our three tasks: abstractive summarization, question generation, and entailment generation. In this section, we describe our novel layerspecific, soft-sharing approaches and other multitask learning details.

Layer-Specific Sharing Mechanism
Simply sharing all parameters across the related tasks is not optimal, because models for different tasks have different input and output distributions, esp. for low-level vs. high-level parameters. Therefore, related tasks should share some common representations (e.g., high-level information), as well as need their own individual task-specific representations (esp. low-level information). To this end, we allow different components of model parameters of related tasks to be shared vs. unshared, as described next. Encoder Layer Sharing: observed that lower layers (i.e., the layers closer to the input words) of RNN cells in a seq2seq machine translation model learn to represent word structure, while higher layers (farther from input) are more focused on high-level semantic meanings (similar to findings in the computer vision community for image features (Zeiler and Fergus, 2014)). We believe that while textual summarization, question generation, and entailment generation have different training data distributions and low-level representations, they can still benefit from sharing their models' high-level components (e.g., those that capture the skills of saliency and inference). Thus, we keep the lower-level layer (i.e., first layer closer to input words) of the 2layer encoder of all three tasks unshared, while we share the higher layer (second layer in our model as shown in) across the three tasks. Decoder Layer Sharing: Similarly for the decoder, lower layers (i.e., the layers closer to the output words) learn to represent word structure for generation, while higher layers (farther from output) are more focused on high-level semantic meaning. Hence, we again share the higher level components (first layer in the decoder far from output as show in), while keeping the lower layer (i.e., second layer) of decoders of all three tasks unshared. Attention Sharing: As described in Sec. 3.1, the attention mechanism defines an attention distribution over high-level layer encoder hidden states and since we share the second, high-level (semantic) layer of all the encoders, it is intuitive to share the attention parameters as well.

Soft vs. Hard Parameter Sharing
Hard-sharing: In the most common multi-task learning hard-sharing approach, the parameters to be shared are forced to be the same. As a result, gradient information from multiple tasks will directly pass through shared parameters, hence forcing a common space representation for all the related tasks. Soft-sharing: In our soft-sharing approach, we encourage shared parameters to be close in representation space by penalizing their l 2 distances. Unlike hard sharing, this approach gives more flexibility for the tasks by only loosely coupling the shared space representations. We minimize the following loss function for the primary task in soft-sharing approach:
where ? is a hyperparameter, ? represents the primary summarization task's full parameters, while ? sand ? s represent the shared parameter subset between the primary and auxiliary tasks.

Fast Multi-Task Training
During multi-task learning, we alternate the minibatch optimization of the three tasks, based on a tunable 'mixing ratio' ? s : ? q : ? e ; i.e., optimizing the summarization task for ? s mini-batches followed by optimizing the question generation task for ? q mini-batches, followed by entailment generation task for ? e mini-batches (and for 2way versions of this, we only add one auxiliary task at a time). We continue this process until all the models converge. Also, importantly, instead of training from scratch, we start the primary task (summarization) from a 90%-converged model of its baseline to make the training process faster. We observe that starting from a fully-converged baseline makes the model stuck in a local minimum.
In addition, we also start all auxiliary models from their 90%-converged baselines, as we found that starting the auxiliary models from scratch has a chance to pull the primary model's shared parameters towards randomly-initialized auxiliary model's shared parameters. for reporting the results on all of our summarization models. Following previous work, we use ROUGE full-length F1 variant for all our results. Following, we also report ME-TEOR using the MS-COCO evaluation script. Human Evaluation Criteria: We used Amazon MTurk to perform human evaluation of summary relevance and readability. We selected human annotators that were located in the US, had an ap-  proval rate greater than 95%, and had at least 10,000 approved HITs. For the pairwise model comparisons discussed in Sec. 6.2, we showed the annotators the input article, the ground truth summary, and the two model summaries (randomly shuffled to anonymize model identities) -we then asked them to choose the better among the two model summaries or choose 'Not-Distinguishable' if both summaries are equally good/bad. Instructions for relevance were defined based on the summary containing salient/important information from the given article, being correct (i.e., avoiding contradictory/unrelated information), and avoiding redundancy. Instructions for readability were based on the summary's fluency, grammaticality, and coherence.
Training Details All our soft/hard and layerspecific sharing decisions were made on the validation/development set. Details of RNN hidden state sizes, Adam optimizer, mixing ratios, etc. are provided in the supplementary for reproducibility.

Results

Summarization (Primary Task) Results
Pointer+Coverage Baseline We start from the strong model of. 3 shows We use two layers so as to allow our high-versus lowlevel layer sharing intuition. Note that this does not increase that our baseline model performs better than or comparable to. 4 On Gigaword dataset, our baseline model (with pointer only, since coverage not needed for this single-sentence summarization task) performs better than all previous works, as shown in.

Multi-Task with Entailment Generation
We first perform multi-task learning between abstractive summarization and entailment generation with soft-sharing of parameters as discussed in Sec. 4. shows that this multi-task setting is better than our strong baseline models and the improvements are statistically significant on all metrics 5 on both CNN/DailyMail (p < 0.01 in ROUGE-1/ROUGE-L/METEOR and p < 0.05 in ROUGE-2) and Gigaword (p < 0.01 on all metrics) datasets, showing that entailment generation task is inducing useful inference skills to the summarization task (also see analysis examples in Sec. 7).

Multi-Task with Question Generation
For multi-task learning with question generation, the improvements are statistically significant in ROUGE-1 (p < 0.01), ROUGE-L (p < 0.05), and METEOR (p < 0.01) for CNN/DailyMail and in all metrics (p < 0.01) for Gigaword, compared to the respective baseline models. Also, Sec. 7 presents quantitative and qualitative analysis of this model's improved saliency. 6 the parameter size much (23M versus 22M for). As mentioned in the github for, their publicly released pretrained model produces the lower scores that we represent by ? in. Stat. significance is computed via bootstrap test with 100K samples. In order to verify that our improvements were from the auxiliary tasks' specific character/capabilities and not just due to adding more data, we separately trained word embeddings on each auxiliary dataset (i.e., SNLI and SQuAD) and incorporated them into the summarization model. We found that both our 2-way multi-task models perform sig-   Multi-Task with Entailment and Question Generation Finally, we perform multi-task learning with all three tasks together, achieving the best of both worlds (inference skills and saliency). Table 1 and show that our full multi-task model achieves the best scores on CNN/DailyMail and Gigaword datasets, and the improvements are statistically significant on all metrics on both CNN/DailyMail (p < 0.01 in ROUGE-1/ROUGE-L/METEOR and p < 0.02 in ROUGE-2) and Gigaword (p < 0.01 on all metrics). Finally, our 3-way multi-task model (with both entailment and question generation) outperforms the publicly-available pretrained result ( ?) of the previous SotA with stat. significance (p < 0.01), as well the higher-reported results ( ) on ROUGE-1/ROUGE-2 (p < 0.01).

Human Evaluation
We also conducted a blind human evaluation on Amazon MTurk for relevance and readability, based on 100 samples, for both CNN/DailyMail and Gigaword (see instructions in Sec. 5)., our MTL model is higher in relevance scores but a bit lower in nificantly better than these models using the auxiliary wordembeddings, suggesting that merely adding more data in not enough.  readability scores (and is higher in terms of total aggregate scores). One potential reason for this lower readability score is that our entailment generation auxiliary task encourages our summarization model to rewrite more and to be more abstractive than -see abstractiveness results in.
We also show human evaluation results on the Gigaword dataset in (again based on pairwise comparisons for 100 samples), where we see that our MTL model is better than our state-of-theart baseline on both relevance and readability. 7

Generalizability Results (DUC-2002)
Next, we also tested our model's generalizability/transfer skills, where we take the models trained on CNN/DailyMail and directly test them on DUC-2002. We take our baseline and 3way multi-task models, plus the pointer-coverage model from. We only retune the beam-size for each of these three models separately (based on DUC-2003 as the validation set). 9 As shown in, our multitask model achieves statistically significant improvements over the strong baseline (p < 0.01 in ROUGE-1 and ROUGE-L) and the pointercoverage model from (p < 0.01 in all metrics). This demonstrates that our model is able to generalize well and that the auxiliary knowledge helps more in low-resource scenarios.

Auxiliary Task Results
In this section, we discuss the individual/separated performance of our auxiliary tasks.

Entailment Generation
We use the same architecture as described in Sec. 3.1 with pointer mech-7 Note that we did not have output files of any previous work's model on Gigaword; however, our baseline is already a strong state-of-the-art model as shown in. We use the publicly-available pretrained model from's github for these DUC transfer results, which produces the ? results in. All other comparisons and analysis in our paper are based on their higher results. We follow previous work which has shown that larger beam values are better and feasible for DUC corpora. However, our MTL model still achieves stat. significant improvements (p < 0.01 in all metrics) over without beam retuning (i.e., with beam = 4).   anism, and compares our model's performance to . Our pointer mechanism gives a performance boost, since the entailment generation task involves copying from the given premise sentence, whereas the 2-layer model seems comparable to the 1-layer model. Also, the supplementary shows some output examples from our entailment generation model.
Question Generation Again, we use same architecture as described in Sec. 3.1 along with pointer mechanism for the task of question generation. compares the performance of our model w.r.t. the state-of-the-art. Also, the supplementary shows some output examples from our question generation model.

Ablation and Analysis Studies
Soft-sharing vs. Hard-sharing As described in Sec. 4.2, we choose soft-sharing over hard-sharing because of the more expressive parameter sharing it provides to the model. Empirical results in 8 prove that soft-sharing method is statistically significantly better than hard-sharing with p < 0.001 in all metrics. 10
Comparison of Different Layer-Sharing Methods We also conducted ablation studies among various layer-sharing approaches. shows results for soft-sharing models with decoder-only sharing (D1+D2; similar to ) as well as lower-layer sharing (encoder layer 1 + decoder layer 2, with and without attention shared). As shown, our final model (high-level semantic layer sharing E2+Attn+D1) outperforms: Ablation studies comparing our final multi-task model with hard-sharing and different alternative layer-sharing methods. Here E1, E2, D1, D2, Attn refer to parameters of the first/second layer of encoder/decoder, and attention parameters. Improvements of final model upon ablation experiments are all stat. signif. with p < 0.05.

Quantitative Improvements in Entailment
We employ a state-of-the-art entailment classifier, and calculate the average of the entailment probability of each of the output summary's sentences being entailed by the input source document. We do this for output summaries of our baseline and 2-way-EG multi-task model (with entailment generation).
As can be seen in, our multi-task model improves upon the baseline in the aspect of being entailed by the source document (with statistical significance p < 0.001). Further, we use the Named Entity Recognition (NER) module from CoreNLP to compute the number of times the output summary contains extraneous facts (i.e., named entities as detected by the NER system) thatare not present in the source documents, based on the intuition that a well-entailed summary should not contain unrelated information not followed from the input premise. We found that our 2-way MTL model with entailment generation reduces this extraneous count by 17.2% w.r.t. the baseline.
The qualitative examples below further discuss this issue of generating unrelated information.
Quantitative Improvements in Saliency Detection For our saliency evaluation, we used the   answer-span prediction classifier from trained on SQuAD as the keyword detection classifier. We then annotate the ground-truth and model summaries with this keyword classifier and compute the % match, i.e., how many salient words from the ground-truth summary were also generated in the model summary. The results are shown in Table 10, where the 2-way-QG MTL model (with question generation) versus baseline improvement is stat. significant (p < 0.01). Moreover, we found 93 more cases where our 2-way-QG MTL model detects 2 or more additional salient keywords than the pointer baseline model (as opposed to vice versa), showing that sentence-level question generation task is helping the document-level summarization task in finding more salient terms.
Qualitative Examples on Entailment and Saliency Improvements presents an example of output summaries generated by, our baseline, and our 3-way multitask model. and our baseline models generate phrases like "john hartson" and "hampden injustice" that don't appear in the input document, hence they are not entailed by the input. 12 Moreover, both models missed salient information like "josh meekings", "leigh griffiths", and "hoops", that our multi-task model recovers. Hence, our 3-way multi-task model generates summaries thatare both better at logical entailment and contain more salient information. We refer to supplementary for more details and similar examples for separated 2-way multi-task models (supplementary.
Abstractiveness Analysis As suggested in, we also compute the abstractiveness score as the number of novel n-grams between the 12 These extra, non-entailed unrelated/contradictory information are not present at all in any paraphrase form in the input document. We consider the fill-in-the-blank highlights annotated by human on CNN/DailyMail dataset as salient information.
Input Document: celtic have written to the scottish football association in order to gain an ' understanding?f the refereeing decisions during their scottish cup semi-final defeat by inverness on sunday . the hoops were left outraged by referee steven mclean? failure to award a penalty or red card for a clear handball in the box by josh meekings to deny leigh griffith? goal-bound shot during the first-half . caley thistle went onto win the game 3-2 after extra-time and denied rory delia? men the chance to secure a domestic treble this season . celtic striker leigh griffiths has a goal-bound shot blocked by the outstretched arm of josh meekings . celtic? adam matthews -lrb-right -rrb-slides in with a strong challenge on nick ross in the scottish cup semi-final . ' given the level of reaction from our supporters and across football , we are duty bound to seek an understanding of what actually happened ,?eltic said in a statement . they added , ' we have not been given any other specific explanation so far and this is simply to understand the circumstances of what went on and why such an obvious error was made .however , the parkhead outfit made a point of congratulating their opponents , who have reached the first-ever scottish cup final in their history , describing caley as a ' fantastic club and saying ' reaching the final is a great achievement .?eltic had taken the lead in the semi-final through defender virgil van dijk? curling free-kick on 18 minutes , but were unable to double that lead thanks to the meekings controversy . it allowed inverness a route back into the game and celtic had goalkeeper craig gordon sent off after the restart for scything down marley watkins in the are a . greg tansey duly converted the resulting penalty . edward ofere then put caley thistle ahead , only for john guidetti to draw level for the bhoys . with the game seemingly heading for penalties , david raven scored the winner on 117 minutes , breaking thousands of celtic hearts . celtic captain scott brown -lrb-left -rrb-protests to referee steven mclean but the handball goes unpunished . griffiths shows off his acrobatic skills during celtic? eventual surprise defeat by inverness . celtic pair aleksandar tonev -lrb-left -rrb-and john guidetti look dejected as their hopes of a domestic treble end . Ground-truth: celtic were defeated 3-2 after extra-time in the scottish cup semi-final . leigh griffiths had a goal-bound shot blocked by a clear handball. however, no action was taken against offender josh meekings . the hoops have written the sfa for an 'understanding' of the decision .: john hartson was once on the end of a major hampden injustice while playing for celtic . but he cannot see any point in his old club writing to the scottish football association over the latest controversy at the national stadium . hartson had a goal wrongly dis allowed for offside while celtic were leading 1-0 at the time but went onto lose 3-2 . Our Baseline: john hartson scored the late winner in 3-2 win against celtic . celtic were leading 1-0 at the time but went onto lose 3-2 . some fans have questioned how referee steven mclean and additional assistant alan muir could have missed the infringement . Multi-task: celtic have written to the scottish football association in order to gain an ' understanding ' of the refereeing decisions . the hoops were left outraged by referee steven mclean 's failure to award a penalty or red card for a clear handball in the box by josh meekings . celtic striker leigh griffiths has a goal-bound shot blocked by the outstretched arm of josh meekings ., our baseline, and 3-way multi-task model with summarization and both entailment generation and question generation. The boxed-red highlighted words/phrases are not present in the input source document in any paraphrasing form. All the unboxedgreen highlighted words/phrases correspond to the salient information. See detailed discussion in above. As shown, the outputs from and the baseline both include nonentailed words/phrases (e.g. "john hartson"), as well as they missed salient information ("hoops", "josh meekings", "leigh griffiths") in their output summaries. Our multi-task model, however, manages to accomplish both, i.e., cover more salient information and also avoid unrelated information.: Example summary from our 3way MTL model.
The boxed-red highlights are extraneously-generated words not present/paraphrased in the input document. The unboxed-green highlights show salient phrases. model output summary and source document. As shown in, our multi-task model (EG + QG) is more abstractive than.

Conclusion
We presented a multi-task learning approach to improve abstractive summarization by incorporating the ability to detect salient information and to be logically entailed by the document, via question generation and entailment generation auxiliary tasks. We propose effective soft and highlevel (semantic) layer-specific parameter sharing and achieve significant improvements over the state-of-the-art on two popular datasets, as well as a generalizability/transfer DUC-2002 setup.