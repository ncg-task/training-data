title
Effective Attention Modeling for Aspect-Level Sentiment Classification
abstract
Aspect-level sentiment classification aims to determine the sentiment polarity of a review sentence towards an opinion target. A sentence could contain multiple sentiment-target pairs; thus the main challenge of this task is to separate different opinion contexts for different targets. To this end, attention mechanism has played an important role in previous state-of-the-art neural models. The mechanism is able to capture the importance of each context word towards a target by modeling their semantic associations. We build upon this line of research and propose two novel approaches for improving the effectiveness of attention. First, we propose a method for target representation that better captures the semantic meaning of the opinion target. Second, we introduce an attention model that incorporates syntactic information into the attention mechanism. We experiment on attention-based LSTM (Long Short-Term Memory) models using the datasets from SemEval 2014, 2015, and 2016. The experimental results show that the conventional attention-based LSTM can be substantially improved by incorporating the two approaches. This work is licenced under a Creative Commons Attribution 4.0 International Licence. Licence details: http:// creativecommons.org/licenses/by/4.0/
Introduction
Aspect-level sentiment classification is an important task in fine-grained sentiment analysis. Given a sentence and an opinion target (also called aspect expression) occurring in the sentence, the task aims to determine the sentiment polarity of the sentence towards the opinion target. An opinion target or target for short refers to a word or a phrase (a sequence of words) describing an aspect of an entity. For example, in the sentence "This little place has acute interior decor and affordable prices", the targets are interior decor and prices, and they belong to the aspects ambience and price respectively.
Compared to document-level or sentence-level sentiment classification, the main challenge of aspectlevel sentiment classification is to differentiate sentiments towards different targets when there are multiple targets in a sentence. For instance, the sentence "The appetizers are ok, but the service is slow." expresses a neutral sentiment on the target appetizers and a negative sentiment on the target service. To this end, attention mechanism has played an important role in state-of-the-art neural models for this task. It assigns a positive weight att i for each context word w i , which can be interpreted as the probability that w i is the right word to focus on when inferring the sentiment polarity of the given target. The weight att i is generally computed as a function of the hidden representation hi of w i and the target representation t as follows:
It has been shown that adding an attention model substantially improves the accuracy of aspect-level sentiment classification. Our work builds upon this line of research. We propose two novel approaches for improving the effectiveness of attention models. The first approach is a new way of encoding a target which better captures the aspect semantics of the target expression. The target representation is crucial since attention weights are computed based on it as shown in Eq. 1. In representing the target, we are mapping a word or a phrase into a vector in Rd . Ideally, targets thatare semantically similar should be mapped to vectors thatare close together in Rd . However, previous neural attention models simply map a target by averaging its component word vectors. This may work fine for targets that only contain one word but may fail to capture the semantics of more complex expressions, as also mentioned by. For example, we cannot obtain a good representation for "hot dog" by averaging the word vectors of "hot" and "dog". Hot would be close to words like warm or cold and dog would be close to animals like cat. The average would not be close to other food like burgers or spaghetti. Another example is "hong kong style food". As it consists of many words, the averaged word vector could be faraway from "food" in vector space.
To address this problem, inspired by, we instead model each target as a mixture of K aspect embeddings where we would like each embedded aspect to represent a cluster of closely related targets. We use an autoencoder structure to learn both the aspect embeddings as well as the representation of the target as a weighted combination of the aspect embeddings. The weight vector represents the probability distribution over aspects for the given target. The autoencoder structure is jointly trained with a neural attention-based sentiment classifier to provide a good target representation as well as a high accuracy on the predicted sentiment. We found the learned embeddings to be semantically meaningful, i.e., embeddings of words thatare semantically related appear close to the same aspect embedding. For example, embeddings of the words service, servers, staff, and courteous appear close to the same aspect embedding, which we interpret to represent the aspect service.
Our second approach exploits syntactic information to construct a syntax-based attention model. The attention models used in previous works give equal importance to all context words. In that case, the computed attention weights rely entirely on the semantic associations between context words and the target. However, this may not be sufficient for differentiating opinions words for different targets. Instead, our syntax-based attention mechanism selectively focuses on a small subset of context words thatare close to the target on the syntactic path which is obtained by applying a dependency parser on the review sentence.
We conducted experiments on attention-based LSTM models using the SemEval 2014, 2015, and 2016 datasets. The results show that attention-based LSTM can be substantially improved by incorporating our two proposed methods, and that the resulting model outperforms all baseline methods on aspect-level sentiment classification.

Related Work
Under supervised learning conditions, aspect-level sentiment classification is typically considered as a classification problem. Early works mainly used manually designed features such as sentiment lexicon, n-grams, and dependency information. However, these methods highly depend on the quality of the designed features, which is labor-intensive. With the advances of deep learning methods, various neural models have been proposed for automatically learning target-dependent sentence representations for classification. The main idea behind these works is to develop neural architectures thatare capable of learning continuous features without feature engineering and at the same time capturing the intricate relatedness between a target and context words.
Among these works, attention-based neural models have attracted growing interest due to their ability to explicitly capture the importance of context words. have shown that a better sentence representation could be obtained by stacking multiple layers of attention. In the work of, a variant of attention-based LSTM was proposed. also adopts multiple layers of attention and aggregates the attention outputs through a recurrent neural network.
As aspect information is very beneficial, in some works, an aspect embedding is directly used to capture the importance of context words through an attention mechanism, where the authors assume that the aspect label is provided as an input. Unlike them, we do not assume that the aspects of each sentence are given. Instead, we propose to learn the probability distribution over aspects for the given target, and use the weighted summation of aspect embeddings for target representation. The probability distribution and the aspect embeddings are learned via an unsupervised objective, which is jointly trained with the neural attention-based sentiment classifier.

Model Description
We propose two approaches to improve the effectiveness of the attention mechanism. The approaches maybe applied more generally but we use them on attention-based LSTM as it has been widely used in previous works for sentiment analysis. We first give the task definition in ( ?3.1). Then, we briefly describe the architecture of attention-based LSTM ( ?3.2) and introduce the two proposed approaches ( ?3.3 & ?3.4). Finally, we describe the over all architecture of our model for aspect-level sentiment classification and the training objective ( ?3.5).

Task Definition and Notation
Given a review sentence s = (w 1 , w 2 , ..., w n ) consisting of n words, and an opinion target occurring in the sentence a = (a 1 , a 2 , ..., am ) consisting of a subsequence of m continuous words from s, aspect-level sentiment classification aims to determine the sentiment polarity of sentence s towards the opinion target a. When dealing with a text corpus, we begin by associating each word w with a continuous feature vector e w ? Rd , also known as word embedding, where d denotes the embedding dimension. The vectors associated with the words correspond to the rows of a word embedding matrix E ? RV ?d , where V is the vocabulary size.

Attention-based LSTM
We briefly describe a conventional attention-based LSTM in this subsection. Given a sequence of word embeddings {e w 1 , e w 2 , ..., e wn } of a sentence s, LSTM with trainable parameters ? lstm makes use of three gates to discard or pass the information through time, and outputs a sequence of hidden vectors h = {h 1 , h 2 , ..., h n }. The sentence representation z s used for sentiment classification is then computed as the weighted summation of hidden vectors.
A positive weight pi is computed for each hi , which can be interpreted as the probability that w i is the right word to focus on when inferring the sentiment polarity of the opinion target a. The value pi is computed by an attention model, which conditions on the hidden vector hi as well as the target representation. In previous works, the attention process is usually described with the following equations:
where f score is a function that computes a score for word w i according to the semantic association between hi and t s , and t sis the vector representation of the given target.

Target Representation
Most previous work, we represent the target as a weighted summation of aspect embeddings, as illustrated in. An aspect embedding matrix is represented by T ? R K?d , where K, the number of aspects defined by the user, is much smaller than V . The process is formalized as follows:
where Average returns the mean of the input vectors. c s captures both target information and context information. qt is the weight vector over K aspect embeddings, where each weight represents the probability that the target belongs to the related aspect. W t and b tare a weight matrix and a bias vector respectively. We would like the learned aspect embeddings to be meaningful and semantically coherent. This would allow us to interpret an aspect by looking at its nearby words in vector space. However, the aspect embedding matrix T is randomly initialized. It is difficult to obtain coherent aspect embeddings if we only rely on the training of the sentiment classifier. Therefore, we add an unsupervised objective function to ensure the quality of the aspect embeddings, which is jointly trained with the attention-based LSTM. Indeed, we can understand the process shown by Eq. as an autoencoder, where we first reduce c s from d dimensions to K dimensions with softmax non-linearity. Only the dimensions thatare relevant to the aspects are retained in qt , whereas the other dimensions are removed. Then we reconstruct c s from qt through linear combination of aspect embeddings. The unsupervised objective is thus to minimize the reconstruction error as shown below:
where cosine similarity CosSim() is used as the similarity measure. denotes a very small positive number. We set it to 10 ?7 in all experiments. D denotes all training samples, (s, a) denotes a sentencetarget pair, and ? = {E, T, W t , b t } is the set of trainable parameters.
The learning process can also be viewed as multi-task learning where the unsupervised objective shown as Eq. 9 is an auxiliary task. Multi-task learning can help to reduce the amount of data required for learning and to improve the model generalization ability.

Syntax-based Attention Mechanism
The attention mechanism used in previous works gives equal importance to all context words, where the attention weight is merely a measure of semantic association between the target and the context word. But intuitively not all words are equally important for determining the polarity of a target. Words that appear near the target or have a modifier relation to the target, for example, are more important and should receive higher weight. This is particularly true for opinion words that express sentiment and when there are multiple targets and multiple opinion words in one sentence. To address this issue, we propose an attention mechanism that also encodes the syntactic structure of a sentence, where syntactic information is obtained from a dependency parser. shows the dependency tree of an example sentence. The opinion words thatare closer to the target in the dependency tree are more relevant for determining its sentiment. In our model, we define the location l of a context word as its distance to the target 1 along the dependency path. The attention model selectively attends to a small window of context words based on their location. We use ws to denote the attention window size. In our experiment, we ignore context words whose location is larger than ws and for context words within the window, different weights are applied so that words closer to the target receive more attention. The details of the proposed syntax-based attention model are described as follows:
where t sis the target representation constructed using the method described in ?3.3. We adopt a simple score function as follows:
where W a ? R d?d is a trainable weight matrix.

Overall Architecture and Training Objective
After incorporating the two proposed approaches into the attention-based LSTM, our final model is illustrated in. The attention-based LSTM component is associated with the categorical cross entropy loss of sentiment classification. The loss function is given below:
where C is the collection of sentiment classes, P g (s,a) (c) is either 1 or 0, indicating whether the gold label is c for (s, a), and P (s,a) (c) is the predicted probability that (s, a) has sentiment class c. ? = {E, T, W t , b t , W a , ? lstm } is the set of trainable parameters.
The aspect embeddings in T may become similar to each other during training. To ensure diversity, we employ a regularization term to enforce the uniqueness of each aspect embedding:
where I is the identity matrix, T norm is the L 2 normalization of T, and denotes the sum of all entries in the matrix. R reaches the minimum when the dot product between any two different aspect embeddings is zero. Thus, the regularization term aims to enforce orthogonality among the rows of T, which punishes redundancy between aspect embeddings.
The final objective function of our model is defined as:
where ? u and ? rare hyperparameters that control the weights of the unsupervised objective described in ?3.3 and the regularization term respectively.

Experiments

Datasets
We evaluate our proposed model on four benchmark datasets, taken from SemEval 2014 task 4, SemEval 2015 task 12, and SemEval 2016 task 5 2. Each training and test sample in the 2014 datasets consists of the review sentence, the opinion target, and the sentiment polarity towards the opinion target. Following previous works, we remove samples with conflicting polarity in the 2014 datasets -the number of samples in that class is very small and incorporating it will make the training dataset extremely unbalanced. The data format in the 2015 and 2016 datasets is a bit different, where each opinion target is also associated with one or multiple aspects and thus can have multiple sentiment polarities. Below is an example:
The food was delicious but expensive.
(target="food", aspect=food#quality, polarity=Pos) (target="food", aspect=food#prices, polarity=Neg)
Since our model only takes a sentence and an opinion target as input, without using the aspect information, we remove a sample in both training and test sets if the opinion target has different polarities as the example above. This removes about 5% and 4% of test samples from the 2015 and 2016 datasets respectively. Statistics of the resulting datasets are presented in. We initialize word embeddings using the 300-dimension GloVe vectors supplied by and we use the dependency parser from spaCy 3 to obtain dependency paths of review sentences. We randomly select 20% of the original training data as the development set and only use the remaining 80% for training. Values for the hyperparameters are obtained empirically on the development set of one task and are fixed for all other experiments. The dimension of the LSTM hidden vectors is set to 300, the objective weights ? u and ? rare set to 1 and 0.1 respectively, the attention window size ws is set to 5 and the number of aspects K is set to 8.
We use RMSProp with base learning rate set to 0.001 and decay rate set to 0.9 for network training. The minibatch size is set to 32. As a regularizer, we apply dropout with probability 0.5 to the LSTM layer and the output layer. We train the network for a fix number of epochs and select the best model according to the performance on the development set, and evaluate it on the test set.

Model Comparisons
We compare our model with the following baselines:
(1) Feature-based SVM: We compare with the reported results of atop system in SemEval 2014. We could not directly compare with the reported results from SemEval 2015 and 2016 as their model inputs are different from ours (aspect is also one of their inputs).
(2) LSTM: An LSTM network is built on top of word embeddings. The mean over hidden vectors is used as the sentence representation.  We produce the results of TDLSTM, ATAE-LSTM, and MM with the source codes released by their authors. We re-implement RAM following the instructions in its paper as the code is not available. The comparison results are shown in. Both accuracy and macro-F1 are used for evaluation as the label distributions are unbalanced. The reported numbers are obtained as the average value over 5 different runs with random initializations for each method. Significant test results are included for testing the robustness of methods under random parameter initializations. We also show the effect of each proposed approach: LSTM+ATT+TarRep denotes the model where the proposed target representation is used while the attention model remains the same as LSTM+ATT; LSTM+SynATT denotes the model where only the conventional attention is replaced by our syntax-based attention; and LSTM+SynATT+TarRep denotes the full model with both approaches integrated as shown in.
We make the following observations: 1) Feature-based SVM is still a strong baseline, our best model achieves competitive results on D1 and D2 without relying on so many manually-designed features and external resources. 2) Compared with all other neural baselines, our full model achieves statistically significant improvements (p < 0.05) on both accuracies and macro-F1 scores for D1, D3, D4. 3) Compared with LSTM+ATT, all three settings of our model are able to achieve statistically significant improvements (p < 0.05) on all datasets. This demonstrates that both proposed approaches are effective. 4) The integrated full model over all achieves the best performance compared to using only one of the two proposed approaches. This indicates that the two proposed approaches are complementary, thus further improvements could be obtained when combining them. 5) The proposed target representation is more helpful on restaurant domain (D1, D3, and D4) than laptop domain (D2). A plausible reason is that restaurant domain has clearer aspects for opinion targets, while it is much harder to determine the aspects for many opinion targets in the laptop domain. Since our model represents the target as weighted summation of aspect embeddings, domains with clear aspects may benefit more from the model.

Model Analysis
We conduct more detailed analysis of the proposed approaches quantitatively and qualitatively. By examining the final test outputs of the relevant models, we try to investigate what kind of errors made by the baseline can be more effectively treated by our proposed approaches.   Impact of Syntax-based Attention Syntax-based attention is supposed to better differentiate opinion contexts for different targets when there are multiple targets appearing in the sentence. To verify this, we compare LSTM+SynATT with LSTM and LSTM+ATT on sentences grouped by their number of targets. shows the accuracies on the test sets of Restaurant14 (D1) and Laptop14 (D2).
LSTM+SynATT performs the best on all groups. In particular, it performs substantially better on groups with two or three targets. By analyzing a number of examples from these groups, we find that the proposed syntax-based attention is more effective in capturing the relevant opinion context for a given target when there are multiple targets in the sentence. Two examples are given in, where our syntax-based attention successfully captures the correct opinion word towards the target of interest, whereas since conventional attention only relies on semantic association between words and the target, it fails by mis-attending to the opinion word towards other target which has similar aspect semantics.
In addition, we observe that all models perform poorly on the group with more than three targets. By analyzing the errors, we find two main causes. First, those sentences are relatively long, involving more complex opinion expressions and sentence structures. Second, the proportion of neutral samples: Top 5 representative words of the eight discovered aspects on Restaurant14 contained in this group is much higher than in other groups. Since the number of neutral samples in the training set is small, the trained classifier has difficulties in predicting neutral samples in the test set.

Impact of Target Representation
To investigate how the proposed target representation helps to improve performance, we extract test examples from Restaurant14 which are mis-classified by LSTM+ATT but are correctly classified by LSTM+ATT+TarRep. Among these examples, 56% are associated with opinion targets consisting of more than one words. Two examples are shown in where the targets are "green chillis" and "boutique selection of wines" respectively. uses t-SNE visualization to show the comparison of the learned target representations between our method and the method of averaging word vectors used in previous works on these two examples. In, we can observe that simply averaging the component word vectors fails to capture the correct semantics of both targets, as the target representations are faraway from the food-related words in the embedding space. Due to the inaccurate representation of target, as shown in, LSTM+ATT fails to attend to the right opinion context in both examples. Our proposed target representation is able to capture the correct aspect semantics for both targets and as a result, the attention mechanism can capture the correct opinion context. Furthermore, the proposed target representation also outputs aspect embeddings after the training process. Each aspect can be interpreted by its nearby words in vector space. presents top representative words of the eight discovered aspects on Restaurant14. The words are ranked based on their cosine similarities with the aspect embedding. As shown, each aspect is semantically coherent and our model is able to discover the typical aspects of a restaurant such as food, ambience, service, and price. Since qt in Equation represents the probability distribution over aspects for the input target, our model could additionally be used to map the input target to an aspect. We did not conduct further experiments on this since it is not our main focus in this work, but it could bean interesting direction to explore in future.

Remaining Error Analysis
We additionally conduct a careful analysis of a subset of errors made by our full model, in order to better understand its limitations. To do that, we randomly sample 100 examples with classification errors on the test set of Restaurant14, and classify them into several error categories. shows the top three error categories, the corresponding proportions, and some representative examples for each category. The top category is Neutral, which denotes examples where the gold sentiment label is neutral. There are two main groups of errors under this category: (1) The polarity of the target is affected by other sentiment words in the sentence. As shown in example 1), the sentence holds a positive sentiment on atmosphere, but expresses no specific opinion on drinks. However, affected by the word perfect, the predicted sentiment towards drinks is positive. Although the proposed attention mechanism aims to address this type of errors, it still fails on complex examples; (2) The sentence is objective, with no opinion expression such as example 2). Since there are many more positive training examples, the predictions on such neutral examples are often biased towards positive sentiment.
The second most common error category is Complex, which includes examples with implicit opinion expressions (example 3) or those that require deep comprehension to be understood (example 4). This type of errors is difficult to handle with current techniques, especially when trying to build an end-toend neural network. The diversity and low frequency of those expressions make it hard for a statistical approach to capture their patterns. For errors made on examples with negation words, we believe this is due to the insufficient training data such that LSTM cannot effectively capture certain sequential patterns.

Conclusion
We propose two novel approaches to improve the effectiveness of attention mechanism for aspect-level sentiment classification. In our experiments, we show quantitatively and qualitatively that both methods help to improve the performance of a conventional attention-based LSTM. The integrated model achieves the best results over baseline methods.
As future work, we can consider improving the accuracy on neutral examples. Possible methods include data augmentation on neutral examples and integration of linguistic knowledge to better determine target-relevant opinion expressions.