title
DialogueRNN : An Attentive RNN for Emotion Detection in Conversations
abstract
Emotion detection in conversations is a necessary step for a number of applications , including opinion mining over chat history , social media threads , debates , argumentation mining , understanding consumer feedback in live conversations , and soon .
Currently systems do not treat the parties in the conversation individually by adapting to the speaker of each utterance .
In this paper , we describe a new method based on recurrent neural networks that keeps track of the individual party states throughout the conversation and uses this information for emotion classification .
Our model outperforms the stateof - the - art by a significant margin on two different datasets .
Introduction
Emotion detection in conversations has been gaining increasing attention from the research community due to its applications in many important tasks such as opinion mining over chat history and social media threads in YouTube , Facebook , Twitter , and soon .
In this paper , we present a method based on recurrent neural networks ( RNN ) that can cater to these needs by processing the huge amount of available conversational data .
Current systems , including the state of the art , do not distinguish different parties in a conversation in a meaningful way .
They are not aware of the speaker of a given utterance .
In contrast , we model individual parties with party states , as the conversation flows , by relying on the utterance , the context , and current party state .
Our model is based on the assumption that there are three major aspects relevant to the emotion in a conversation : the speaker , the context from the preceding utterances , and the emotion of the preceding utterances .
These three aspects are not necessarily independent , but their separate modeling significantly outperforms the state - of - the - art ) .
In dyadic conversations , the parties have distinct roles .
Hence , to extract the context , it is crucial to consider the preceding turns of both the speaker and the listener at a given moment .
Our proposed DialogueRNN system employs three gated recurrent units ( GRU ) to model these aspects .
The incoming utterance is fed into two GRUs called global GRU and party GRU to update the context and party Copyright 2019 , Association for the Advancement of Artificial Intelligence ( www.aaai.org ) .
All rights reserved .
state , respectively .
The global GRU encodes corresponding party information while encoding an utterance .
Attending over this GRU gives contextual representation that has information of all preceding utterances by different parties in the conversation .
The speaker state depends on this context through attention and the speaker 's previous state .
This ensures that at time t , the speaker state directly gets information from the speaker 's previous state and global GRU which has information on the preceding parties .
Finally , the updated speaker state is fed into the emotion GRU to decode the emotion representation of the given utterance , which is used for emotion classification .
At time t , the emotion GRU cell gets the emotion representation of t ? 1 and the speaker state of t .
The emotion GRU , along with the global GRU , plays a pivotal role in inter-party relation modeling .
On the other hand , party GRU models relation between two sequential states of the same party .
In DialogueRNN , all these three different types of GRUs are connected in a recurrent manner .
We believe that Dialogue RNN outperforms state - of - the - art contextual emotion classifiers such as ) because of better context representation .
The rest of the paper is organized as follows :
Section 2 discusses related work ; Section 3 provides detailed description of our model ; Sections 4 and 5 present the experimental results ; finally , Section 6 concludes the paper .
Related Work
Emotion recognition has attracted attention in various fields such as natural language processing , psychology , cognitive science , and soon .
found correlation between emotion and facial cues .
fused acoustic information with visual cues for emotion recognition .
introduced text - based emotion recognition , developed in the work of .
used contextual information for emotion recognition in multimodal setting .
Recently , successfully used RNN - based deep networks for multimodal emotion recognition , which was followed by other works .
Reproducing human interaction requires deep understanding of conversation .
gued that emotional dynamics in a conversation is an interpersonal phenomenon .
Hence , our model incorporates inter-personal interactions in an effective way .
Further , since conversations have a natural temporal nature , we adopt the temporal nature through recurrent network .
Memory networks has been successful in several NLP are as , including question answering , machine translation , speech recognition , and soon .
Thus , used memory networks for emotion recognition in dyadic conversations , where two distinct memory networks enabled inter -speaker interaction , yielding state - of - the - art performance .
Methodology
Problem Definition
Let there be M parties / participants p 1 , p 2 , . . . , p M ( M = 2 for the datasets we used ) in a conversation .
The task is to predict the emotion labels ( happy , sad , neutral , angry , excited , and frustrated ) of the constituent utterances u 1 , u 2 , . . . , u N , where utterance u t is uttered by party p s ( ut ) , while s being the mapping between utterance and index of its corresponding party .
Also , u t ? R Dm is the utterance representation , obtained using feature extractors described below .
Unimodal Feature Extraction
For a fair comparison with the state - of - the - art method , conversational memory networks ( CMN ) ) , we follow identical feature extraction procedures .
Textual Feature Extraction
We employ convolutional neural networks ( CNN ) for textual feature extraction .
Following , we obtain n-gram features from each utterance using three distinct convolution filters of sizes 3 , 4 , and 5 respectively , each having 50 feature - maps .
Outputs are then subjected to max - pooling followed by rectified linear unit ( ReLU ) activation .
These activations are concatenated and fed to a 100 dimensional dense layer , which is regarded as the textual utterance representation .
This network is trained at utterance level with the emotion labels .
Audio and Visual Feature Extraction Identical to , we use 3D - CNN and open SMILE ( Eyben , Wllmer , and Schuller 2010 ) for visual and acoustic feature extraction , respectively .
Our Model
We assume that the emotion of an utterance in a conversation depends on three major factors :
1 . the speaker .
2 . the context given by the preceding utterances .
3 . the emotion behind the preceding utterances .
Our model DialogueRNN , 1 shown in , models these three factors as follows : each party is modeled using a party state which changes as and when that party utters an utterance .
This enables the model to track the parties ' emotion dynamics through the conversations , which is related to the emotion behind the utterances .
Furthermore , the context of an utterance is modeled using a global state ( called global , because of being shared among the parties ) , where the preceding utterances and the party states are jointly encoded for context representation , necessary for accurate party state representation .
Finally , the model infers emotion representation from the party state of the speaker along with the preceding speakers ' states as context .
This emotion representation is used for the final emotion classification .
We use GRU cells to update the states and representations .
Each GRU cell computes a hidden state defined ash t = GRU * ( h t?1 , x t ) , where x t is the current input and h t? 1 is the previous GRU state .
ht also serves as the current GRU output .
We provide the GRU computation details in the supplementary .
GRUs are efficient networks with trainable parameters : W {r , z , c} * , {h , x } and b { r , z , c } * .
We model the emotion representation of the current utterance as a function of the emotion representation of the previous utterance and the state of the current speaker .
Finally , this emotion representation is sent to a softmax layer for emotion classification .
Global State ( Global GRU )
Global state aims to capture the context of a given utterance by jointly encoding utterance and speaker state .
Each state also serves as speaker - specific utterance representation .
Attending on these states facilitates the inter-speaker and inter-utterance dependencies to produce improved context representation .
The current utterance u t changes the speaker 's state from q s ( ut ) , t?1 to q s ( ut ) , t .
We capture this change with GRU cell GRU G with output size D G , using u t and q s ( ut ) , t ?1 :
where D G is the size of global state vector , DP is the size of party state vector , W
Context- vector : Party State ( Party GRU ) DialogueRNN keeps track of the state of individual speakers using fixed size vectors q 1 , q 2 , . . . , q M throughout the conversation .
These states are representative of the speakers ' state in the conversation , relevant to emotion classification .
We update these states based on the current ( at time t) role of a participant in the conversation , which is either speaker or listener , and the incoming utterance u t .
These state vectors are initialized with null vectors for all the participants .
The main purpose of this module is to ensure that the model is aware of the speaker of each utterance and handle it accordingly .
Speaker Update ( Speaker GRU ) : Speaker usually frames the response based on the context , which is the preceding utterances in the conversation .
Hence , we capture context ct relevant to the utterance u t as follows :
where
( 2 ) , we calculate attention scores ?
over the previous global states representative of the previous utterances .
This assigns higher attention scores to the utterances emotionally relevant to u t .
Finally , in Eq. ( 4 ) the context vector ct is calculated by pooling the previous global states with ?.
Now , we employ a GRU cell GRU P to update the current speaker state q s ( ut ) , t?1 to the new state q s ( ut ) , t based on incoming utterance u t and context ct using GRU cell GRU P of output size DP q s ( ut ) , t = GRU P ( q s ( ut ) , t? 1 , ( u t ? ct ) ) ,
This encodes the information on the current utterance along with its context from the global GRU into the speaker 's state q s ( ut ) , which helps in emotion classification down the line .
Listener Update : Listener state models the listeners ' change of state due to the speaker 's utterance .
We tried two listener state update mechanisms : Simply keep the state of the listener unchanged , that is
Employ another GRU cell GRU L to update the listener state based on listener visual cues ( facial expression ) v i , t and it s context ct , as
where
Listener visual features of party i at time t v i ,t are extracted using the model introduced by Arriaga , Valdenegro - Toro , and Plger , pretrained on FER2013 dataset , where feature size D V =
7 . The simpler first approach turns out to be sufficient , since the second approach yields very similar result while increasing number of parameters .
This is due to the fact that a listener becomes relevant to the conversation only when he / she speaks .
In other words , a silent party has no influence in a conversation .
Now , when a party speaks , we update his / her state q i with context ct which contains relevant information on all the preceding utterances , rendering explicit listener state update unnecessary .
This is shown in .
Emotion Representation ( Emotion GRU )
We infer the emotionally relevant representation e t of utterance u t from the speaker 's state q s ( ut ) , t and the emotion representation of the previous utterance e t?1 .
Since context is important to the emotion of the incoming utterance u t , e t?1 feeds fine - tuned emotionally relevant contextual information from other the party states q s ( u <t ) , < t into the emotion representation e t .
This establishes a connection between the speaker state and the other party states .
Hence , we model e t with a GRU cell
Since speaker state gets information from global states , which serve as speaker - specific utterance representation , one may claim that this way the model already has access to the information on other parties .
However , as shown in the ablation study ( Section 5.6 ) emotion GRU helps to improve the performance by directly linking states of preceding parties .
Further , we believe that speaker and global GRUs ( GRU P , GRU G ) jointly act similar to an encoder , whereas emotion GRU serves as a decoder .
Emotion Classification
We use a two - layer perceptron with a final softmax layer to calculate c = 6 emotion - class probabilities from emotion representation e t of utterance u t and then we pick the most likely emotion class :
where
Training
We use categorical cross - entropy along with L2regularization as the measure of loss ( L ) during training :
where N is the number of samples / dialogues , c ( i ) is the number of utterances in sample i , P i , j is the probability distribution of emotion labels for utterance j of dialogue i , y i , j is the expected class label of utterance j of dialogue i , ? is the L2-regularizer weight , and ?
is the set of trainable parameters where ? = { W ? , W
DialogueRNN
Variants
We use DialogueRNN ( Section 3.3 ) as the basis for the following models :
DialogueRNN + Listener State Update ( DialogueRNN l ) :
This variant updates the listener state based on the the resulting speaker state q s ( ut ) , t , as described in Eq..
Bidirectional DialogueRNN ( BiDialogueRNN ) : Bidirectional DialogueRNN is analogous to bidirectional RNNs , where two different RNNs are used for forward and backward passes of the input sequence .
Outputs from the RNNs are concatenated in sequence level .
Similarly , in BiDia - logue RNN , the final emotion representation contains information from both past and future utterances in the dialogue through forward and backward DialogueRNNs respectively , which provides better context for emotion classification .
DialogueRNN + attention ( DialogueRNN + Att ) :
For each emotion representation e t , attention is applied over all surrounding emotion representations in the dialogue by matching them withe t ( Eqs. and ) .
This provides context from the relevant ( based on attention score ) future and preceding utterances .
Bidirectional DialogueRNN
+ Emotional attention ( BiDi - alogueRNN + Att ) :
For each emotion representation e t of BiDialogue RNN , attention is applied over all the emotion representations in the dialogue to capture context from the other utterances in dialogue :
where
Further , ?
tare fed to a two - layer perceptron for emotion classification , as in Eqs. ( 9 ) to ( 11 ) .
Experimental Setting
Datasets Used
We use two emotion detection datasets IEMOCAP ) and AVEC ) to evaluate Dia - logueRNN .
We partition both datasets into train and test sets with roughly 80 20 ratio such that the partitions do not share any speaker . ) .
The annotations are available every 0.2 seconds in the original data base .
However , in order to adapt the annotations to our need of utterance - level annotation , we averaged the attributes over the span of an utterance .
Baselines and State of the Art
For a comprehensive evaluation of Dialogue RNN , we compare our model with the following baseline methods :
c - LSTM : Biredectional LSTM is used to capture the context from the surrounding utterances to generate contextaware utterance representation .
However , this model does not differentiate among the speakers .
c- LSTM+ Att :
In this variant attention is applied applied to the c - LSTM output at each timestamp by following Eqs. and .
This provides better context to the final utterance representation .
TFN :
This is specific to multimodal scenario .
Tensor outer product is used to capture intermodality and intra-modality interactions .
This model does not capture context from surrounding utterances .
MFN ) : Specific to multimodal scenario , this model utilizes multi-view learning by modeling view - specific and cross - view interactions .
Similar to TFN , this model does not use contextual information .
CNN : This is identical to our textual feature extractor network ( Section 3.2 ) and it does not use contextual information from the surrounding utterances .
Memnet : As described in , the current utterance is fed to a memory network , where the memories correspond to preceding utterances .
The output from the memory network is used as the final utterance representation for emotion classification .
CMN : This state - of - the - art method models utterance context from dialogue history using two distinct GRUs for two speakers .
Finally , utterance representation is obtained by feeding the current utterance as query to two distinct memory networks for both speakers .
Modalities
We evaluated our model primarily on textual modality .
However , to substantiate efficacy of our model in multimodal scenario , we also experimented with multimodal features .
Results and Discussion
We compare DialogueRNN and its variants with the baselines for textual data in .
As expected , on average Di - alogue RNN outperforms all the baseline methods , including the state - of - the - art CMN , on both of the datasets .
Comparison with the State of the Art
We compare the performance of DialogueRNN against the performance of the state - of - the - art CMN on IEMOCAP and AVEC datasets for textual modality .
IEMOCAP
As evidenced by , for IEMOCAP dataset , our model surpasses the state - of - the - art method CMN by 2.77 % accuracy and 3.76 % f 1 - score on average .
We think that this enhancement is caused by the fundamental differences between CMN and DialogueRNN , which are 1 .
party state modeling with GRU P in Eq. ( 5 ) , 2 . speaker specific utterance treatment in Eqs. and , 3 . and global state capturing with GRU G in Eq. ( 1 ) .
Since we deal with six unbalanced emotion labels , we also explored the model performance for individual labels .
Dia-logueRNN outperforms the state - of - the - art method CMN in five out of six emotion classes by significant margin .
For frustrated class , Dialogue RNN lags behind CMN by 1.23 % f 1 - score .
We think that Dialogue RNN may surpass CMN using a standalone classifier for frustrated class .
However , it can be observed in that some of the other variants of DialogueRNN , like BiDialogueRNN has already outperformed CMN for frustrated class .
AVEC DialogueRNN outperforms CMN for valence , arousal , expectancy , and power attributes ; see .
It yields significantly lower mean absolute error ( M AE ) and higher Pearson correlation coefficient ( r ) for all four attributes .
We believe this to be due to the incorporation of party state and emotion GRU , which are missing from CMN .
DialogueRNN vs. DialogueRNN Variants
We discuss the performance of different DialogueRNN variants on IEMOCAP and AVEC datasets for textual modality .
DialogueRNN l :
Following , using explicit listener state update yields slightly worse performance than regular DialogueRNN .
This is true for both IEMOCAP and AVEC datasets in general .
However , the only exception to this trend is for happy emotion label for IEMOCAP , where DialogueRNN l outperforms DialogueRNN by 1.71 % f1score .
We surmise that , this is due to the fact that a listener becomes relevant to the conversation only when he / she speaks .
Now , in Dialogue RNN , when a party speaks , we update his / her state q i with context ct which contains relevant information on all the preceding utterances , rendering explicit listener state update of Dialogue RNN l unnecessary .
BiDialogueRNN : Since BiDialogueRNN captures context from the future utterances , we expect improved performance from it over DialogueRNN .
This is confirmed in , where BiDialogueRNN outperforms Dialogue RNN on average on both datasets .
DialogueRNN + Attn : DialogueRNN +
Attn also uses information from the future utterances .
However , here we take information from both past and future utterances by matching them with the current utterance and calculating attention score over them .
This provides relevance to emotionally important context utterances , yielding better performance than BiDialogue RNN + Attn : Since this setting generates the final emotion representation by attending over the emotion representation from BiDialogueRNN , we expect better performance than both BiDialogueRNN and Dia - logue RNN + Attn .
This is confirmed in , where this setting performs the best in general than any other methods discussed , on both datasets .
This setting yields 6.62 % higher f 1 - score on average than the state - of - the - art CMN and 2.86 % higher f 1 - score than vanilla DialogueRNN for IEMOCAP dataset .
For AVEC dataset also , this setting gives the best performance across all the four attributes .
Multimodal Setting
As both IEMOCAP and AVEC dataset contain multimodal information , we have evaluated Dialogue RNN on multimodal features as used and provided by .
We use concatenation of the unimodal features as a fusion method by following , since fusion mechanism is not a focus of this paper .
Now , as we can see in , DialogueRNN significantly outperforms the strong baselines and state - of - the - art method CMN .
Case Studies
Dependency on preceding utterances ( Dialogue RNN )
One of the crucial components of DialogueRNN is its attention module over the outputs of global GRU ( GRU G ) .
shows the ? attention vector ( Eq. ( 2 ) ) over the history of a given test utterance compared with the attention vector from the CMN model .
The attention of our model is more focused compared with CMN : the latter gives diluted attention scores leading to misclassifications .
We observe this trend of focused - attention across cases and posit that it can be interpreted as a confidence indicator .
Further in this example , the test utterance by PA ( turn 44 ) comprises of a change in emotion from neutral to frustrated .
DialogueRNN anticipates this correctly by attending to turn 41 and 42 thatare spoken by PA and P B , respectively .
These two utterances provide self and inter-party influences that trigger the emotional shift .
CMN , however , fails to capture such dependencies and wrongly predicts neutral emotion .
Dependency on future utterances ( BiDialogueRNN + Att ) visualizes the ? ( Eq. ( 13 ) ) attention over the emotion representations e t for a segment of a conversation between a couple .
In the discussion , the woman ( P A ) is initially at a neutral state , whereas the man ( P B ) is angry throughout .
The figure reveals that the emotional attention of the woman is localized to the duration of her neutral state ( turns 1 - 16 approximately ) .
For example , in the dialogue , turns 5 , 7 , and 8 strongly attend to turn 8 .
Interestingly , turn 5 attends to both past ( turn 3 ) and future ( turn 8 ) utterances .
Similar trend across other utterances establish inter-dependence between emotional states of future and past utterances .
The beneficial consideration of future utterances through GRU E is also apparent through turns 6 , 9 . These utterances focus on the distant future ( turn 49 , 50 ) where the man is at an enraged state , thus capturing emotional correlations across time .
Although , turn 6 is misclassified by our model , it still manages to infer a related emotional state ( anger ) against the correct state ( frustrated ) .
We analyze more of this trend in section 5.5 .
Dependency on distant context
For all correct predictions in the IEMOCAP test set in we summarize the distribution over the relative distance between test utterance and ( 2 nd ) highest attended utterance - either in the history or future - in the conversation .
This reveals a decreasing trend with the highest dependence being within the local context .
However , a significant portion of the test utterances ( ? 18 % ) , attend to utterances thatare 20 to 40 turns away from themselves , which highlights the important role of long - term emotional dependencies .
Such cases primarily occur in conversations that maintain a specific affective tone and do not incur frequent emotional shifts .
sion , when seen with the global context , it reveals the excitement present in the speaker .
To dis ambiguate such cases , our model attends to distant utterances in the past ( turn 11 , 14 ) which serve as prototypes of the emotional tonality of the over all conversation .
Error Analysis
A noticeable trend in the predictions is the high level of cross-predictions amongst related emotions .
Most of the misclassifications by the model for happy emotion are for excited class .
Also , anger and frustrated share misclassifications amongst each other .
We suspect this is due to subtle difference between those emotion pairs , resulting in harder dis ambiguation .
Another class with high rate of false - positives is the neutral class .
Primary reason for this could be its majority in the class distribution over the considered emotions .
At the dialogue level , we observe that a significant amount of errors occur at turns having a change of emotion from the previous turn of the same party .
Across all the occurrences of these emotional - shifts in the testing set , our model correctly predicts 47.5 % instances .
This stands less as compared to the 69.2 % success that it achieves at regions of no emotional - shift .
Changes in emotions in a dialogue is a complex phenomenon governed by latent dynamics .
Further improvement of these cases remain as an open are a of research .
Ablation Study
The main novelty of our method is the introduction of party state and emotion GRU ( GRU E ) .
To comprehensively study the impact of these two components , we remove them one at a time and evaluate their impact on IEMOCAP .
Party State
Emotion GRU F1 -+ 55.56 + - 57.38 + + 59.89 : Ablated DialogueRNN for IEMOCAP dataset .
As expected , following , party state stands very important , as without its presence the performance falls by 4.33 % .
We suspect that party state helps in extracting useful contextual information relevant to parties ' emotion .
Emotion GRU is also impactful , but less than party state , as its absence causes performance to fall by only 2.51 % .
We believe the reason to be the lack of context flow from the other parties ' states through the emotion representation of the preceding utterances .
Conclusion
We have presented an RNN - based neural architecture for emotion detection in a conversation .
In contrast to the stateof - the - art method , CMN , our method treats each incoming utterance taking into account the characteristics of the speaker , which gives finer context to the utterance .
Our model outperforms the current state - of - the - art on two distinct datasets in both textual and multimodal settings .
Our method is designed to be scalable to multi-party setting with more than two speakers , which we plan to explore in future work .
