title
Multi-level Multimodal Common Semantic Space for Image-Phrase Grounding
abstract
We address the problem of phrase grounding by learning a multi-level common semantic space shared by the textual and visual modalities. We exploit multiple levels of feature maps of a Deep Convolutional Neural Network, as well as contextualized word and sentence embeddings extracted from a character-based language model. Following dedicated non-linear mappings for visual features at each level, word, and sentence embeddings, we obtain multiple instantiations of our common semantic space in which comparisons between any target text and the visual content is performed with cosine similarity. We guide the model by a multi-level multimodal attention mechanism which outputs attended visual features at each level. The best level is chosen to be compared with text content for maximizing the pertinence scores of image-sentence pairs of the ground truth. Experiments conducted on three publicly available datasets show significant performance gains (20%-60% relative) over the state-of-the-art in phrase localization and set a new performance record on those datasets. We provide a detailed ablation study to show the contribution of each element of our approach and release our code on GitHub 1 .
Introduction
Phrase grounding is the task of localizing within an image a given natural language input phrase, as illustrated in. This ability to link text and image content is a key component of many visual semantic tasks such as image captioning, visual question answering, text-based image retrieval, and robotic navigation. It is especially challenging as it requires a good representation of both the visual and textual domain and an effective way of linking them.
On the visual side, most of the works exploit Deep Convolutional Neural Networks but often rely on bounding box 1 https://github.com/hassanhub/MultiGrounding A crowd of onlookers on a tractor ride watch a farmer hard at work in the field. The phrase grounding task in the pointing game setting. Given the sentence on top and the image on the left, the goal is to point (illustrated by the stars here) to the correct location of each natural language query (colored text). Actual example of our method results on Flickr30k.
proposals or use a global feature of the image, limiting the localization ability and freedom of the method. On the textual side, methods rely on a closed vocabulary or try to train their own language model using small image-caption pairs datasets. Finally, the mapping between the two modalities is often performed with a weak linear strategy. We argue that approaches in the literature have not fully leveraged the potential of the more powerful visual and textual model developed recently, and there is room for developing more sophisticated representations and mapping approaches.
In this work, we propose to explicitly learn a non-linear mapping of the visual and textual modalities into a common space, and do so at different granularity for each domain. Indeed, different layers of a deep network encode each region of the image with gradually increasing levels of discriminativeness and context awareness, similarly single words and whole sentences contain increasing levels of semantic meaning and context. This common space mapping is trained with weak supervision and exploited at test-time with a multi-level multimodal attention mechanism, where a natural formalism for computing attention heatmaps at each level, attended features and pertinence scoring, enables us to solve the phrase grounding task elegantly and effectively. We evaluate our model on three commonly used datasets in the literature of textual grounding and show that it sets a new state-of-the-art performance by a large margin.
Our contributions in this paper are as follows:
? We learn, with weak-supervision, a non-linear mapping of visual and textual features to a common regionword-sentence semantic space, where comparison between any two semantic representations can be performed with a simple cosine similarity;
? We propose a multi-level multimodal attention mechanism, producing either word-level or sentence-level attention maps at different semantic levels, enabling us to choose the most representative attended visual feature among different semantic levels;
? We set new state-of-the-art performance on three commonly used datasets, and give detailed ablation results showing how each part of our method contributes to the final performance.

Related works
In this section, we give an overview of related works in the literature and discuss how our method differs from them.

Grounding natural language in images
The earliest works on solving textual grounding tried to tackle the problem by finding the right bounding box out of a set of proposals, usually obtained from prespecified models. The ranking of these proposals, for each text query, can be performed using scores estimated from a reconstruction or sentence generation procedure, or using distances in a common space. However, relying on a fixed set of pre-defined concepts and proposals may not be optimal and the quality of the bounding boxes defines an upper bound of the performance that can be achieved. Therefore, several methods have integrated the proposal step in their framework to improve the bounding box quality. These works often operate in a fully supervised setting, where the mapping between sentences and bounding boxes has to be provided at training time which is not always available and is costly to gather. Furthermore, methods based on bounding boxes often extract features separately for each bounding box, inducing a high computational cost.
Therefore, some works choose not to rely on bounding boxes and propose to formalize the localization problem as finding a spatial heatmap for the referring expression. This setting is mostly weakly-supervised, whereat training time only the image and the text (describing either the whole image or some parts of it) are provided but not the corresponding bounding box or segmentation mask for each description. This is the more general setting we are addressing in this paper. The top-down approaches and the attention-based approach learn to produce a heatmap for each word of a vocabulary.
At test time, all these methods produce the final heatmap by averaging the heatmaps of all the words in the query that exist in the vocabulary. Several grounding works have also explored the use of additional knowledge, such as image and linguistic structures, phrase context and exploiting pre-trained visual models predictions.
In contrast to many works in the literature, we don't use a pre-defined set of image concepts or words in our method. We instead rely on visual feature maps and a character-based language model with contextualized embeddings which could handle any unseen word considering the context in the sentence.

Mapping to common space
It is a common approach to extract visual and language features independently and fuse them before the prediction. Current works usually apply a multi-layer perceptron (MLP), element-wise multiplication, or cosine similarity to combine representations from different modalities. Other methods have used the Canonical Correlation Analysis (CCA), which finds linear projections that maximize the correlation between projected vectors from the two views of heterogeneous data. introduced the Multimodal Compact Bilinear (MCB) pooling method that uses a compressed feature from the outer product of two vectors of visual and language features to fuse them. Attention methods can also measure the matching of an image-sentence feature pair.
We use non-linear mappings of both visual features (in multiple semantic levels) and textual embeddings (both contextualized word and sentence embeddings) separately and use multi-level attention with multimodal loss to learn those mapping weights.

Attention mechanisms
Attention has proved its effectiveness in many visual and language tasks, it is designed to capture a better representation of image-sentence pairs based on their interactions. The Accumulated Attention method propose to estimate attention on sentences, objects and visual feature maps in an iterative fashion, whereat each iteration the attention of the other two modalities is exploited as guidance. A dense co-attention mechanism is explored in to solve the Visual Question Answering task by using a fully symmetric architecture between visual and language representations. In their attention mechanism, they add a dummy location in attention map when no region or word the model should attend along with a softmax. In AttnGAN, a deep attention multimodal similarity model is proposed to compute a fine-grained image-text matching loss.
In contrast to these works, we remove the softmax on top of the attention maps to let the model decide which word-region could be related to each other by the guide of

Feature level selection
Pertinence Score. Overview of our method: the textual input is processed with a pre-trained text model followed by a non-linear mapping to the common semantic space. Similarly for the image input, we use a pre-trained visual model to extract visual features maps at multiple levels and learn a non-linear mapping for each of them to the common semantic space. A multi-level attention mechanism followed by a feature level selection produces the pertinence score between the image and the sentence. We train our model using only the weak supervision of image-sentence pairs. the multimodal loss. Since we map the visual features to a multi-level visual representation, we give the model the freedom to choose any location at any level for either sentence or word. In other words, each word or sentence can choose which level of representation (and which region in that representation) to attend to. We directly calculate the attention map by cosine similarity in our common semantic space. We show that this approach significantly outperforms all the state of the art approaches on three commonly used datasets and set a new state of the art performance.

Method
In this section, we describe our method (illustrated in) for addressing the textual grounding task and elaborate on each part with details. In Section 3.1, we explain how we extract multi-level visual features from an image and word/sentence embeddings from the text, and then describe how we map them to a common space. In Section 3.2 we describe how we calculate multi-level multimodal attention map and attended visual feature for each word/sentence. Then, in Section 3.3 we describe how we choose the most representative visual feature level for the given text. Finally, in Section 3.4 we define a multimodal loss to train the whole model with weak supervision.

Feature Extraction and Common Space
Visual Feature Extraction: In contrast to many vision tasks where the last layer of a pre-trained CNN is being used as visual representation of an image, we use feature maps from different layers and map them separately to a common space to obtain a multi-level set of feature maps to be compared with text. Intuitively, using different levels of visual representations would be necessary for covering a wide range of visual concepts and patterns. Thus, we extract L = 4 sets of feature maps from L different levels of a visual network, upsample them by a bi-linear interpolation 2 to a fixed resolution M ? M for all the L levels, and then apply 3 layers of 1x1 convolution (with LeakyRelu) with D filters to map them into equalsized feature maps. Finally, we stack these feature maps and space-flatten them to have an over all image representation tensor V ? RN ?L?D , with N = M ? M . This tensor is finally normalized by the l 2 -norm of its last dimension. An overview of the feature extraction and common space mapping for image can be seen in the left part of.
In this work, we use VGG as a baseline for fair comparison with other works, and the state of the art CNN, PNASNet-5, to study the ability of our model to exploit this more powerful visual model.
Textual Feature Extraction : State-of-the-art works in grounding use a variety of approaches for textual feature extraction. Some use pre-trained LSTM or BiLSTMs on big datasets (e.g. Google 1 Billion) based on either word2vec or GloVe representations. Some train BiLSTM solely on image-caption datasets (mostly MSCOCO) and argue it is necessary to train them from scratch to distinguish between visual concepts which may not be distinguishable in language (e.g. red and green are different in vision but similar in language as they are both colors). These works either use the recurrent network outputs at each state as wordlevel representations or their last output (on each direction for BiLSTM) as sentence-level or a combination of both.
In this paper, however we use ELMo, a 3-layer network pre-trained on 5.5B tokens which calculates word representations on the fly (based on CNN on characters, similar to) and then feed them to 2 layers of BiLSTMs which produce contextualized representations. Thus, for a given sentence the model outputs three representations for each token (splitted by white space). We take a linear combination of the three representations and feed them to 2 fully connected layers (with shared weights among words), each with D nodes with LeakyRelu as non-linearity between each layer, to obtain each word representation st (green pathway in the right part of). The resulting word-based text representation for an entire sentence would be a tensor S ? R T ?D built from the stacking of each word representation st . The sentence-level text representation is calculated by concatenation of last output of the BiLSTMs at each direction. Similarly, we apply a linear combination on the two sentence-level representations and map it to the common space by feeding it to 2 fully connected layers of 2 as transposed convolution produces checkerboard artifacts

Linear Combination
Textual non-linear mapping. Left: we choose feature maps of different convolutional blocks of a CNN model, resize them to the same spatial dimensions using bi-linear interpolation, and map them to feature maps of the same size. Right: word and sentences embedding to the common space from the pre-trained ELMo model. The green pathway is for word embedding, the red pathway for sentence embedding. All the orange boxes (1 ? 1 convolutional layers of the visual mapping, linear combination and the two sets of fully connected layers of the textual mapping) are the trainable parameters of our projection to the common space.
D nodes, producing the sentence representation s (red pathway in the right part of). The word tensor and the sentence vector are normalized by their last dimension l 2 -norm before being fed to the multimodal attention block.

Multi-Level Multimodal Attention Mechanism
Given the image and sentence, our task is to estimate the correspondences between spatial regions (n) in the image at different levels (l), and words in the sentence at different positions (t). We seek to estimate a correspondence measure, H n,t,l , between each word and each region at each level. We define this correspondence by the cosine similarity between word and image region representations at different levels in common space: H n,t,l = max(0, st , v n,l ).
(1)
Thus, H ? RN ?T ?L represents a multi-level multi-modal attention map which could be simply used for calculating either visual or textual attended representation. We apply ReLU to the attention map to zero-out dissimilar wordvisual region pairs, and simply avoid applying softmax on any dimension of the heatmap tensor. Note that this choice is very different in spirit from the commonly used approach of applying softmax to attention maps. Indeed for irrelevant image-sentence pairs, the attention maps would be almost all zeros while the softmax process would always force attention to be a distribution over the image/words summing to 1. Furthermore, a group of words shaping a phrase could have the same attention are a which is again hard to achieve considering the competition among regions/words in the case of applying softmax on the heatmap. We will analyze the influence of this choice experimentally in our ablation study.
Given the heatmap tensor, we calculate the attended visual feature for the l-th level and t-th word as
which is basically a weighted average over the visual representations of the l-th level with the attention heatmap values as weights. In other words, a t,l is a vector in the hyperplane spanned by a subset of visual representations in the common space, this subset being selected based on the heatmap tensor. An overview of our multi-level multimodal attention mechanism for calculating attended visual feature can be seen in. In the sequel, we describe how we use this attended feature to choose the most representative hyperplane, and calculate a multimodal loss to be minimized by weak supervision of image-sentence relevance labels.

Feature Level Selection
Once we find the attended visual feature, we calculate the word-image pertinence score at level l using cosine similarity for each word and the attended visual feature as
Intuitively, each visual feature map level could carry different semantic information, thus for each word we propose to apply a hard level-attention to get the score from the level contributing the most as
This procedure can be seen as finding projection of the textual embeddings on hyperplanes spanned by visual features. For each word feature st, we compute an attention map H l,t and an attended visual feature a l,t at each level l. We choose the level that maximizes similarity between the attended visual feature and the textual feature in the common space to produce the pertinence score Rt. This is equivalent to finding the hyperplane (spanned by each level visual feature vectors in the common space) that best matches the textual feature. from different levels and choosing the one that maximizes this projection. Intuitively, that chosen hyperplane can be a better representation for visual feature space attended byword t. This can be seen in the top central part of, where selecting the maximum pertinence score over levels is equivalent to selecting the hyperplane with the smallest angle with the t-th word representation (or the highest similarity between attended visual feature and textual feature). Thus, selecting the most representative hyperplane (or visual feature level).
Once we find the best word-image pertinence score, similar to and inspired by the minimum classification error, we find the over all (word-based) sentence-image pertinence score as follows:
Similarly, for the sentence we can repeat the same procedure (except that we no more need Eq. (5)) for finding the attention map, attended visual feature and sentence-image pertinence score as follows, respectively:

Multimodal Loss
In this paper, we only use a weak supervision in the form of binary image-caption relevance. Thus, similar to we train the network on a batch of image-caption pairs, {(S b , I b )} B b=1 and force it to have high sentence-image pertinence score for related pairs and low score for unrelated pairs. Thus, considering a pertinence score Rx (either R w or R s ), we calculate the posterior probability of the sentence Sb being matched with image I b by applying competition among all sentences in the batch using:
Similarly, the posterior probability of I b being matched with Sb could be calculated using:
Then, similarly to, we can define the loss using the negative log posterior probability over relevant imagesentence pairs as follows:
As we want to train a common semantic space for both words and sentences, we combine the loss L w (that can be computed based on the word relevance R w ) and the sentence loss L s (obtained using R s ) to define our final loss L as
This loss is minimized over a batch of B images along with their related sentences. We found in preliminary experiments on held-out validation data, that the values ? 1 = 5, ? 2 = 10 work well and we keep them fixed for our experiments. In the next section, we will evaluate our proposed model on different datasets and will have an ablation study to show the reason for our choices in our model.

Experiments
In this section, we first present the datasets used in our experimental setup. We then evaluate our approach comparing with the state-of-the-art, and further present ablation studies showing the influence of each step of our method.

Datasets
MSCOCO 2014 consists of 82,783 training images and 40,504 validation images. Each image is associated with five captions describing the image. We use the train split of this dataset for training our model. Flickr30k Entities contains 224k phrases describing localized bounding boxes in ?31k images each described by 5 captions. Images and captions come from Flickr30k. We use 1k images from the test split of this dataset for evaluation.
VisualGenome contains 77,398 images in the training set, and a validation and test set of 5000 images each. Each image consists of multiple bounding box annotations and a region description associated with each bounding box. We use the train split of this dataset to train our models and use its test split for evaluation.
ReferIt consists of 20,000 images from the IAPR TC-12 dataset along with 99,535 segmented image regions from the SAIAPR-12 dataset. Images are associated with descriptions for the entire image as well as localized image regions collected in a two-player game providing approximately 130k isolated entity descriptions. In our work, we only use the unique descriptions associated with each region. We use a split similar to which contains 9k training, 1k validation, and 10k test images. We use the test split of this dataset to evaluate our models.

Experimental Setup
We use a batch size of B = 32, where for a batch of image-caption pairs each image (caption) is only related to one caption (image). Image-caption pairs are sampled randomly with a uniform distribution. We train the network for 20 epochs with the Adam optimizer with lr = 0.001 where the learning rate is divided by 2 once at the 10-th epoch and again at the 15-th epoch. We use D = 1024 for common space mapping dimension and ? = 0.25 for LeakyReLU in the non-linear mappings. We regularize weights of the mappings with l 2 regularization with reg value = 0.0005. For VGG, we take outputs from {conv4 1, conv4 3, conv5 1, conv5 3} and map to semantic feature maps with dimension 18?18?1024, and for PNAS-Net we take outputs from {Cell 5, Cell 7, Cell 9, Cell 11} pointing game accuracy attention correctness Ours Ours Ours Ours Class
Inc. Category-wise pointing game accuracy and attention correctness on Flickr30k Entities. and map to features with dimension 19 ? 19 ? 1024. Both visual and textual networks weights are fixed during training and only common space mapping weights are trainable. In the ablation study, we use 10 epochs without dividing learning rate, while the rest of settings remain the same. We follow the same procedure as in for cleaning and pre-processing the datasets and use the same train/test splits for fair comparison in our evaluations.

Phrase Localization Evaluation
As stated in Section 4.1, we train our model on the train split of MSCOCO and Visual Genome (VG), and evaluate it on the test splits of Flickr30k, ReferIt, and VG. In test time, for Flickr30k we feed a complete sentence to the model and take weighted average of attention heatmaps of words for each query with the word-image pertinence scores from Eq. (4) as weights. For ReferIt and Visual Genome, we treat each query as a single sentence and take its sentence-level attention heatmap as the final query pointing heatmap. Once the pointing heatmaps are calculated, we find the max location (as pointing location for the given query) and evaluate the model by the pointing game accuracy: #hit #hit+#miss . Pointing game accuracy results can be found in for Flickr30k, ReferIt and Visual Genome datasets. The results show that our method significantly outperforms all state-of-the-art methods in all conditions and all datasets. For fair comparison with To get a deeper understanding of our model, we first report in category-wise pointing game accuracy and attention correctness (percentage of the heatmap falling into the ground truth bounding box) and compare with the   state-of-the-art method on Flickr30k. We observe that our method obtains a higher performance on almost all categories even when VGG16 is used as the visual backbone.
The model based on PNASNet consistently outperforms the state-of-the-art on all categories on both metrics. We further perform a test on level selection rate for different types of queries and report them in. It shows that the 3rd level dominates the selection while the 4th level is also important for several categories such as scene and animals. The 1st level is exploited mostly for the animals and people categories. The full sentence selection relies mostly on the 3rd level as well, while for some sentences the 4th model has been selected. This demonstrates the power of the proposed method in selecting the right level of representation.

Ablation Study
In this section, we trained on MSCOCO multiple configurations of our approach, with a PNASNet visual model, to better understand which aspects of our method affects positively or negatively the performance. We report evaluation results on Flickr30k in. Results are sorted by performance to show the most successful combinations.
We first evaluated the efficacy of using multi-level feature maps (ML) with level selection compared to a fixed choice of visual layer (M: middle layer, L: last layer) for comparison to word and sentence embeddings (WL and SL). Specifically, we used Cell 7 as middle layer, and Cell 11 as last layer, to be compared with word and sentence embedding in Eq. (1) and Eq. (6a), respectively. The results in rows 1, 2 show that using level-attention mechanism based on multi-level feature maps significantly improves the performance over single visual-textual feature comparison. We then study the affect of non-linear mapping into the common space for the text and visual features (NLT and NLV). By comparing rows 2, 4, 5, 7, we see that non-linear mapping in our model is really important, and replacing any mapping with a linear one significantly degrades the performance. We can also see that non-linear mapping seems more important on the visual side, but best results are obtained with both text and visual non-linear mappings.
We further study the use of ELMo for text embedding or the commonly used approach of training a Bi-LSTM. Specifically, we simply replaced the pre-trained BiLSTMs of ELMo model with a trainable BiLSTM (on top of word embeddings of ELMo), and directly feed the BiLSTM outputs to the attention model. The results in rows 1, 3 and 2, 6 show the importance of using a strong contextualized text embedding as the performance drops significantly.
We also study the use of softmax on the heatmaps, comparing rows 2, 8, we see that applying softmax leads to a very negative effect on the performance. This makes sense, as elaborated in Section 3.2, since this commonly used approach forces unnecessarily the heatmap to have a distribution on either words or regions. Results in row 9 corresponds to a simple baseline on par with the state-of-the-art, showing how much improvement can be gained by not using softmax, the use of our multi-level non-linear common space representation and attention mechanism, and a powerful contextualized textual embedding.. Some image-sentence pairs from Flickr30k, with two queries (colored text) and corresponding heatmaps and selected max value (stars).

Qualitative results
We give in, 6, and 7 some examples of heat maps generated for some queries of the Flickr30k dataset. Specifically, we upsample the heatmaps from their original size of 18 ? 18 (as we use the VGG backbone for these visualizations) by bilinear interpolation to the original image size. We can observe that the max (pointing) location in heatmaps point to correct location in the image and the heatmaps often capture relevant part of the image for each query. It can deal with persons, context and objects even if they are described with some very specific words (e.g. "bronco"), which shows the power of using a character-based contextualized text embedding. Finally, shows some localization failures involving concepts thatare semantically close, and in challenging capture conditions. For example, the frames are mistakenly pointed for the query "window" which is overexposed.

Conclusion
In this paper, we present a weakly supervised method for phrase localization which relies on multi-level attention mechanism on top of multi-level visual semantic features and contextualized text embeddings. We non-linearly map both contextualized text embeddings and multi-level visual semantic features to a common space and calculate a multilevel attention map for choosing the best representative visual semantic level for the text and each word in it. We show that such combination sets a new state of the art performance and provide quantitative numbers to show the importance of 1. using correct common space mapping, 2. strong contextualized text embeddings, 3. freedom of each word to choose correct visual semantic level. Future works lies in studying other applications such as Visual Question Answering, Image Captioning, etc.